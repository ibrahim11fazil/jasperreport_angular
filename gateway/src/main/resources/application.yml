spring:
  application:
    name: gateway
  main:
    allow-bean-definition-overriding: true


server:
#  servlet:
#    context-path: /gateway
  port: 9000

#feign:
#  hystrix:
#    enabled: false

#hystrix.command.default.execution.timeout.enabled: false

#hystrix:
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: false
#        isolation:
#          thread:
#            timeoutInMilliseconds: 30000
#(60000 * 60000) *  (1 + 0) * (2 + 1) = xxxx ms
#eg:


#    ribbon.connectionTimeout is 5000
#    ribbon.readTimeout is 15000
#    ribbon.maxAutoRetries is 0 (default)
#    ribbon.maxAutoRetriesNextServer is 1 (default)

#So the hystrixTimeout should be:

#  (5000 + 15000) * (1 + 0) * (1 + 1) // -> 40000 ms



# If you choose to not configure Hystrix timeout, the default Hystrix timeout will be xxxx ms .
#(ribbon.ConnectTimeout + ribbon.ReadTimeout) * (ribbon.MaxAutoRetries + 1) * (ribbon.MaxAutoRetriesNextServer + 1)
# https://cloud.spring.io/spring-cloud-static/Edgware.SR3/single/spring-cloud.html#_zuul_timeouts
# load ribbon on startup
#ribbon:
#  ReadTimeout: 60000

#hystrix:
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: false

ribbon:
  ConnectTimeout: 60000
  ReadTimeout: 60000
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 240000

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 3000

zuul:
  ribbon:
    eager-load:
      enabled: true
  ignoredServices: '*'
  ignored-headers: Access-Control-Allow-Credentials, Access-Control-Allow-Origin
  routes:
    authentication:
      sensitiveHeaders:
      path: /authentication/**
      url: ${LOGIN_SERVER_URL:http://localhost:9001}
      stripPrefix: true

    authrefresh:
      sensitiveHeaders:
      path: /authrefresh/**
      url: ${LOGIN_SERVER_URL:http://localhost:9001}
      stripPrefix: true

    training:
      path: /training/**
      serviceId: training
      stripPrefix: true
      sensitiveHeaders:

    userdata:
      path: /user/**
      serviceId: user
      stripPrefix: true
      sensitiveHeaders:

    fileupload:
      path: /fileupload/**
      #url: ${FILE_SERVER_URL:http://localhost:9021}
      serviceId: fileupload
      stripPrefix: true
      sensitiveHeaders:

    employee:
      path: /employee/**
      serviceId: employee
      stripPrefix: true
      sensitiveHeaders:

    cis:
      path: /cis/**
      serviceId: cis
      stripPrefix: true
      sensitiveHeaders:

    notification:
      path: /notification/**
      serviceId: notification
      stripPrefix: true
      sensitiveHeaders:

    workflow:
      path: /workflow/**
      serviceId: workflow
      stripPrefix: true
      sensitiveHeaders:

#hystrix:
#  command:
#    training:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000
#    user:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000
#    fileupload:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000
#    employee:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000
#    cis:
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000


logging:
  pattern:
    console: '@%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n'
    file: '@%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n'
  level:
    org:
      springframework:
        web: ERROR
      hibernate: ERROR
    qa:
      gov:
        customs:
          gateway: DEBUG
  file: logs/gateway.log

#eureka:
#  client:
#    fetchRegistry: true
#    registryFetchIntervalSeconds: 5
#    serviceUrl:
#      defaultZone: http://${REGISTRY_URL:registry}:8761/eureka/
#  instance:
#    prefer-ip-address: true
#    hostname: gateway

eureka:
  client:
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://registry:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: true
    ip-address: gateway

# http://${REGISTRY_URL:registry}:8761/eureka/

cloud:
  inetutils:
    prfered-networks:
      - 10.0

#training:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    DeploymentContextBasedVipAddresses: training
#    ConnectTimeout: 15000
#    ReadTimeout: 15000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100
#
#user:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    DeploymentContextBasedVipAddresses: user
#    ConnectTimeout: 15000
#    ReadTimeout: 15000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100
#
#fileupload:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    DeploymentContextBasedVipAddresses: fileupload
#    ConnectTimeout: 60000
#    ReadTimeout: 60000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100
#
#employee:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    DeploymentContextBasedVipAddresses: employee
#    ConnectTimeout: 15000
#    ReadTimeout: 15000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100
#
#cis:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    DeploymentContextBasedVipAddresses: cis
#    ConnectTimeout: 15000
#    ReadTimeout: 15000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100

#management:
#  health:
#    elasticsearch:
#      response-timeout:

management:
  endpoint:
    health:
      show-details: always
    info:
      enabled: true
    web:
      exposure:
        include: ["health","routes","metrics","info"]
      enabled: true
