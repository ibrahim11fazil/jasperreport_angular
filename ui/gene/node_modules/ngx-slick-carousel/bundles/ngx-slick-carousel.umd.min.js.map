{"version":3,"sources":["ng://ngx-slick-carousel/slick.component.ts","ng://ngx-slick-carousel/index.ts"],"names":["SlickCarouselComponent","el","zone","this","EventEmitter","prototype","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","_this","_addedSlides","length","_removedSlides","nextSlidesLength","slides","initialized","forEach","slickItem","push","runOutsideAngular","$instance","slick","nativeElement","idx","indexOf","filter","s","initSlick","jQuery","on","event","run","init","emit","config","currentIndex","initialSlide","currentSlide","afterChange","nextSlide","beforeChange","breakpoint","destroy","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh_1","newOptions_1","Object","assign","Component","args","selector","exportAs","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","template","ElementRef","NgZone","Input","Output","SlickItemDirective","platformId","carousel","ngOnInit","isPlatformBrowser","Directive","Inject","PLATFORM_ID","decorators","type","Host","SlickCarouselModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"sZAwDI,SAAAA,EAAoBC,EACAC,GADAC,KAAAF,GAAAA,EACAE,KAAAD,KAAAA,mBAjBuB,IAAIE,EAAAA,+BACH,IAAIA,EAAAA,6BACN,IAAIA,EAAAA,0BACP,IAAIA,EAAAA,uBACP,IAAIA,EAAAA,yBAIjB,qBACF,sBAC0B,qBACF,UAa7CJ,EAAAK,UAAAC,YAAA,WACIH,KAAKI,WAGTP,EAAAK,UAAAG,gBAAA,WACIL,KAAKM,sBAMTT,EAAAK,UAAAI,mBAAA,WAAA,IAAAC,EAAAP,KACI,GAA+B,EAA3BA,KAAKQ,aAAaC,QAA2C,EAA7BT,KAAKU,eAAeD,OAAY,CAChE,IAAME,EAAmBX,KAAKY,OAAOH,OAAST,KAAKU,eAAeD,OAAST,KAAKQ,aAAaC,OACxFT,KAAKa,YAKsB,IAArBF,EACPX,KAAKI,WAELJ,KAAKQ,aAAaM,QAAQ,SAAAC,GACtBR,EAAKK,OAAOI,KAAKD,GACjBR,EAAKR,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,WAAYJ,EAAUjB,GAAGsB,mBAGtDpB,KAAKQ,aAAe,GAEpBR,KAAKU,eAAeI,QAAQ,SAAAC,GACxB,IAAMM,EAAMd,EAAKK,OAAOU,QAAQP,GAChCR,EAAKK,OAASL,EAAKK,OAAOW,OAAO,SAAAC,GAAK,OAAAA,IAAMT,IAC5CR,EAAKR,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,cAAeE,OAG5CrB,KAAKU,eAAiB,IAtBC,EAAnBC,GACAX,KAAKyB,cA6BrB5B,EAAAK,UAAAuB,UAAA,WAAA,IAAAlB,EAAAP,KACIA,KAAKY,OAASZ,KAAKQ,aACnBR,KAAKQ,aAAe,GACpBR,KAAKU,eAAiB,GACtBV,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAYQ,OAAOnB,EAAKT,GAAGsB,eAEhCb,EAAKW,UAAUS,GAAG,OAAQ,SAACC,EAAOT,GAC9BZ,EAAKR,KAAK8B,IAAI,WACVtB,EAAKuB,KAAKC,KAAK,CAACH,MAAKA,EAAET,MAAKA,QAIpCZ,EAAKW,UAAUC,MAAMZ,EAAKyB,QAE1BzB,EAAKR,KAAK8B,IAAI,WACVtB,EAAKM,aAAc,EAEnBN,EAAK0B,aAAgB1B,EAAKyB,QAAUzB,EAAKyB,OAAOE,aAAgB3B,EAAKyB,OAAOE,aAAe,IAG/F3B,EAAKW,UAAUS,GAAG,cAAe,SAACC,EAAOT,EAAOgB,GAC5C5B,EAAKR,KAAK8B,IAAI,WACVtB,EAAK6B,YAAYL,KAAK,CAACH,MAAKA,EAAET,MAAKA,EAAEgB,aAAYA,IACjD5B,EAAK0B,aAAeE,MAI5B5B,EAAKW,UAAUS,GAAG,eAAgB,SAACC,EAAOT,EAAOgB,EAAcE,GAC3D9B,EAAKR,KAAK8B,IAAI,WACVtB,EAAK+B,aAAaP,KAAK,CAACH,MAAKA,EAAET,MAAKA,EAAEgB,aAAYA,EAAEE,UAASA,QAIrE9B,EAAKW,UAAUS,GAAG,aAAc,SAACC,EAAOT,EAAOoB,GAC3ChC,EAAKR,KAAK8B,IAAI,WACVtB,EAAKgC,WAAWR,KAAK,CAACH,MAAKA,EAAET,MAAKA,EAAEoB,WAAUA,QAItDhC,EAAKW,UAAUS,GAAG,UAAW,SAACC,EAAOT,GACjCZ,EAAKR,KAAK8B,IAAI,WACVtB,EAAKiC,QAAQT,KAAK,CAACH,MAAKA,EAAET,MAAKA,IAC/BZ,EAAKM,aAAc,SAMnChB,EAAAK,UAAAuC,SAAA,SAAS1B,GACLf,KAAKQ,aAAaQ,KAAKD,IAG3BlB,EAAAK,UAAAwC,YAAA,SAAY3B,GACRf,KAAKU,eAAeM,KAAKD,IAMtBlB,EAAAK,UAAAyC,mBAAUC,cACb5C,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,YAAayB,MAInC/C,EAAAK,UAAA2C,gCACH7C,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,gBAItBtB,EAAAK,UAAA4C,gCACH9C,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,gBAItBtB,EAAAK,UAAA6C,iCACH/C,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,iBAItBtB,EAAAK,UAAA8C,gCACHhD,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,gBAItBtB,EAAAK,UAAAE,8BACCJ,KAAKkB,YACLlB,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,aAEzBnB,KAAKkB,UAAY+B,WAErBjD,KAAKa,aAAc,GAGvBhB,EAAAK,UAAAgD,YAAA,SAAYC,GAAZ,IAAA5C,EAAAP,KACI,GAAImD,EAAgB,OAAEC,gBAAkBD,EAAgB,OAAEE,cAAgBF,EAAgB,OAAEE,eAAiBJ,WACrGjD,KAAKa,YAAa,CAClB,IAAMyC,EAAUH,EAAgB,OAAEE,aAAsB,QAClDE,EAAaC,OAAOC,OAAO,GAAIN,EAAgB,OAAEE,qBAChDE,EAAoB,QAE3BvD,KAAKD,KAAKkB,kBAAkB,WACxBV,EAAKW,UAAUC,MAAM,iBAAkBoC,EAAYD,2BA9LtEI,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAU,iBACVC,UAAW,CAAC,CACRC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAArE,IAC9BsE,OAAO,IAEXC,SAAU,yEA7BVC,EAAAA,kBAMAC,EAAAA,0CA2BCC,EAAAA,2BACAC,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,4BAyLD,SAAAC,EAAmB3E,EACsB4E,EACbC,GAFT3E,KAAAF,GAAAA,EACsBE,KAAA0E,WAAAA,EACb1E,KAAA2E,SAAAA,SAG5BF,EAAAvE,UAAA0E,SAAA,WACQC,EAAAA,kBAAkB7E,KAAK0E,aACvB1E,KAAK2E,SAASlC,SAASzC,OAI/ByE,EAAAvE,UAAAC,YAAA,WACQ0E,EAAAA,kBAAkB7E,KAAK0E,aACvB1E,KAAK2E,SAASjC,YAAY1C,2BAjBrC8E,EAAAA,UAASnB,KAAA,CAAC,CACPC,SAAU,8DA5NVS,EAAAA,2CAgOaU,EAAAA,OAAMpB,KAAA,CAACqB,EAAAA,sBACkBnF,EAAsBoF,WAAA,CAAA,CAAAC,KAA/CC,EAAAA,eCvOjBC,EAAA,oDAMCC,EAAAA,SAAQ1B,KAAA,CAAC,CACR2B,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZ3F,EACA4E,GAEFgB,QAAS,CACP5F,EACA4E,SAhBJ","sourcesContent":["import {isPlatformBrowser} from '@angular/common';\nimport {\n    AfterViewChecked,\n    AfterViewInit,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Host,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    SimpleChanges\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n    selector: 'ngx-slick-carousel',\n    exportAs: 'slick-carousel',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SlickCarouselComponent),\n        multi: true\n    }],\n    template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<any> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<any> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<any> = new EventEmitter();\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n    @Output() init: EventEmitter<any> = new EventEmitter();\n\n    public $instance: any;\n    public currentIndex: number;\n    public slides: any[] = [];\n    public initialized = false;\n    private _removedSlides: SlickItemDirective[] = [];\n    private _addedSlides: SlickItemDirective[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor(private el: ElementRef,\n                private zone: NgZone) {\n\n    }\n\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n\n    ngAfterViewInit(): void {\n        this.ngAfterViewChecked();\n    }\n\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            } else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            } else {\n                this._addedSlides.forEach(slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    });\n                });\n                this._addedSlides = [];\n\n                this._removedSlides.forEach(slickItem => {\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter(s => s !== slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickRemove', idx);\n                    });\n                });\n                this._removedSlides = [];\n            }\n        }\n    }\n\n    /**\n     * init slick\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(() => {\n            this.$instance = jQuery(this.el.nativeElement);\n\n            this.$instance.on('init', (event, slick) => {\n                this.zone.run(() => {\n                    this.init.emit({event, slick});\n                });\n            });\n\n            this.$instance.slick(this.config);\n\n            this.zone.run(() => {\n                this.initialized = true;\n\n                this.currentIndex = (this.config && this.config.initialSlide) ? this.config.initialSlide : 0;\n            });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({event, slick, currentSlide});\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n            this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n                this.zone.run(() => {\n                    this.beforeChange.emit({event, slick, currentSlide, nextSlide});\n                });\n            });\n\n            this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n                this.zone.run(() => {\n                    this.breakpoint.emit({event, slick, breakpoint});\n                });\n            });\n\n            this.$instance.on('destroy', (event, slick) => {\n                this.zone.run(() => {\n                    this.destroy.emit({event, slick});\n                    this.initialized = false;\n                });\n            });\n        });\n    }\n\n    addSlide(slickItem: SlickItemDirective) {\n        this._addedSlides.push(slickItem);\n    }\n\n    removeSlide(slickItem: SlickItemDirective) {\n        this._removedSlides.push(slickItem);\n    }\n\n    /**\n     * Slick Method\n     */\n    public slickGoTo(index: number) {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickGoTo', index);\n        });\n    }\n\n    public slickNext() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickNext');\n        });\n    }\n\n    public slickPrev() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPrev');\n        });\n    }\n\n    public slickPause() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPause');\n        });\n    }\n\n    public slickPlay() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPlay');\n        });\n    }\n\n    public unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular(() => {\n                this.$instance.slick('unslick');\n            });\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['config'].previousValue !== changes['config'].currentValue && changes['config'].currentValue !== undefined) {\n            if (this.initialized) {\n                const refresh = changes['config'].currentValue['refresh'];\n                const newOptions = Object.assign({}, changes['config'].currentValue);\n                delete newOptions['refresh'];\n\n                this.zone.runOutsideAngular(() => {\n                    this.$instance.slick('slickSetOption', newOptions, refresh);\n                });\n            }\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n    constructor(public el: ElementRef,\n                @Inject(PLATFORM_ID) private platformId: string,\n                @Host() private carousel: SlickCarouselComponent) {\n    }\n\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    }\n\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"]}