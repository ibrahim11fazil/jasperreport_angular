"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vg_cue_points_1 = require("./vg-cue-points");
describe('Cue points', function () {
    var cuePoints;
    var ref;
    beforeEach(function () {
        ref = {
            nativeElement: document.createElement('div')
        };
        cuePoints = new vg_cue_points_1.VgCuePoints(ref);
    });
    it('Should handle onLoad event', function () {
        cuePoints.ngOnInit();
        expect(cuePoints.onLoad$).toBeDefined();
    });
    xit('Should handle enter/exit events', function () {
        var event = {
            target: document.createElement('video')
        };
        var track = event.target.addTextTrack('captions', 'test');
        var cue = track.addCue(new TextTrackCue(1, 2, 'cue 1')); // Illegal Constructor
        cuePoints.onLoad(event);
        expect(cuePoints.onEnter$).toBeDefined();
        expect(cuePoints.onExit$).toBeDefined();
    });
    it('Should handle onEnter event', function () {
        spyOn(cuePoints.onEnterCuePoint, 'emit').and.callThrough();
        var event = {
            target: {}
        };
        cuePoints.onEnter(event);
        expect(cuePoints.onEnterCuePoint.emit).toHaveBeenCalledWith(event.target);
    });
    it('Should handle onExit event', function () {
        spyOn(cuePoints.onExitCuePoint, 'emit').and.callThrough();
        var event = {
            target: {}
        };
        cuePoints.onExit(event);
        expect(cuePoints.onExitCuePoint.emit).toHaveBeenCalledWith(event.target);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctY3VlLXBvaW50cy5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmctY3VlLXBvaW50cy5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsaURBQThDO0FBSTlDLFFBQVEsQ0FBQyxZQUFZLEVBQUU7SUFDbkIsSUFBSSxTQUFzQixDQUFDO0lBQzNCLElBQUksR0FBZSxDQUFDO0lBRXBCLFVBQVUsQ0FBQztRQUNQLEdBQUcsR0FBRztZQUNGLGFBQWEsRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztTQUMvQyxDQUFDO1FBRUYsU0FBUyxHQUFHLElBQUksMkJBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyw0QkFBNEIsRUFBRTtRQUc3QixTQUFTLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFckIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUMzQyxDQUFDLENBQUMsQ0FBQztJQUVILEdBQUcsQ0FBQyxpQ0FBaUMsRUFBRTtRQUVuQyxJQUFJLEtBQUssR0FBRztZQUNSLE1BQU0sRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQztTQUMxQyxDQUFDO1FBRUYsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzFELElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsc0JBQXNCO1FBRS9FLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN6QyxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDZCQUE2QixFQUFFO1FBQzlCLEtBQUssQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUUzRCxJQUFJLEtBQUssR0FBRztZQUNSLE1BQU0sRUFBRSxFQUFFO1NBQ2IsQ0FBQztRQUVGLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFekIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlFLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDRCQUE0QixFQUFFO1FBQzdCLEtBQUssQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUUxRCxJQUFJLEtBQUssR0FBRztZQUNSLE1BQU0sRUFBRSxFQUFFO1NBQ2IsQ0FBQztRQUVGLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdFLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFZnQ3VlUG9pbnRzIH0gZnJvbSAnLi92Zy1jdWUtcG9pbnRzJztcblxuXG5cbmRlc2NyaWJlKCdDdWUgcG9pbnRzJywgKCkgPT4ge1xuICAgIGxldCBjdWVQb2ludHM6IFZnQ3VlUG9pbnRzO1xuICAgIGxldCByZWY6IEVsZW1lbnRSZWY7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgcmVmID0ge1xuICAgICAgICAgICAgbmF0aXZlRWxlbWVudDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgfTtcblxuICAgICAgICBjdWVQb2ludHMgPSBuZXcgVmdDdWVQb2ludHMocmVmKTtcbiAgICB9KTtcblxuICAgIGl0KCdTaG91bGQgaGFuZGxlIG9uTG9hZCBldmVudCcsICgpID0+IHtcblxuXG4gICAgICAgIGN1ZVBvaW50cy5uZ09uSW5pdCgpO1xuXG4gICAgICAgIGV4cGVjdChjdWVQb2ludHMub25Mb2FkJCkudG9CZURlZmluZWQoKVxuICAgIH0pO1xuXG4gICAgeGl0KCdTaG91bGQgaGFuZGxlIGVudGVyL2V4aXQgZXZlbnRzJywgKCkgPT4ge1xuXG4gICAgICAgIGxldCBldmVudCA9IHtcbiAgICAgICAgICAgIHRhcmdldDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKVxuICAgICAgICB9O1xuXG4gICAgICAgIGxldCB0cmFjayA9IGV2ZW50LnRhcmdldC5hZGRUZXh0VHJhY2soJ2NhcHRpb25zJywgJ3Rlc3QnKTtcbiAgICAgICAgbGV0IGN1ZSA9IHRyYWNrLmFkZEN1ZShuZXcgVGV4dFRyYWNrQ3VlKDEsIDIsICdjdWUgMScpKTsgLy8gSWxsZWdhbCBDb25zdHJ1Y3RvclxuXG4gICAgICAgIGN1ZVBvaW50cy5vbkxvYWQoZXZlbnQpO1xuICAgICAgICBleHBlY3QoY3VlUG9pbnRzLm9uRW50ZXIkKS50b0JlRGVmaW5lZCgpO1xuICAgICAgICBleHBlY3QoY3VlUG9pbnRzLm9uRXhpdCQpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIGhhbmRsZSBvbkVudGVyIGV2ZW50JywgKCkgPT4ge1xuICAgICAgICBzcHlPbihjdWVQb2ludHMub25FbnRlckN1ZVBvaW50LCAnZW1pdCcpLmFuZC5jYWxsVGhyb3VnaCgpO1xuXG4gICAgICAgIGxldCBldmVudCA9IHtcbiAgICAgICAgICAgIHRhcmdldDoge31cbiAgICAgICAgfTtcblxuICAgICAgICBjdWVQb2ludHMub25FbnRlcihldmVudCk7XG5cbiAgICAgICAgZXhwZWN0KGN1ZVBvaW50cy5vbkVudGVyQ3VlUG9pbnQuZW1pdCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoZXZlbnQudGFyZ2V0KTtcbiAgICB9KTtcblxuICAgIGl0KCdTaG91bGQgaGFuZGxlIG9uRXhpdCBldmVudCcsICgpID0+IHtcbiAgICAgICAgc3B5T24oY3VlUG9pbnRzLm9uRXhpdEN1ZVBvaW50LCAnZW1pdCcpLmFuZC5jYWxsVGhyb3VnaCgpO1xuXG4gICAgICAgIGxldCBldmVudCA9IHtcbiAgICAgICAgICAgIHRhcmdldDoge31cbiAgICAgICAgfTtcblxuICAgICAgICBjdWVQb2ludHMub25FeGl0KGV2ZW50KTtcblxuICAgICAgICBleHBlY3QoY3VlUG9pbnRzLm9uRXhpdEN1ZVBvaW50LmVtaXQpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKGV2ZW50LnRhcmdldCk7XG4gICAgfSk7XG59KTtcbiJdfQ==