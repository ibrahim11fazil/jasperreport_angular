"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vg_mute_1 = require("./vg-mute");
var vg_api_1 = require("../../core/services/vg-api");
describe('Mute Button', function () {
    var mute;
    var ref;
    var api;
    beforeEach(function () {
        ref = {
            nativeElement: {
                getAttribute: function (name) {
                    return name;
                }
            }
        };
        api = new vg_api_1.VgAPI();
        api.medias = {
            main: {
                id: 'main',
                volume: 1
            },
            secondary: {
                id: 'secondary',
                volume: 0.5
            }
        };
        mute = new vg_mute_1.VgMute(ref, api);
    });
    it('Should get media by id on init', function () {
        spyOn(api, 'getMediaById').and.callFake(function () {
            return {
                volume: 1
            };
        });
        mute.vgFor = 'test';
        mute.onPlayerReady();
        expect(api.getMediaById).toHaveBeenCalledWith('test');
        expect(mute.currentVolume).toBe(1);
    });
    it('Should get volume for one media file', function () {
        api.medias = {
            main: {
                volume: 1
            }
        };
        mute.target = api;
        var volume = mute.getVolume();
        expect(volume).toBe(1);
    });
    describe('onClick (single media)', function () {
        it('should mute volume if current volume is different than 0', function () {
            api.medias = {
                main: {
                    volume: 0.75
                }
            };
            mute.target = api;
            mute.onClick();
            expect(mute.currentVolume).toBe(0.75);
            expect(api.volume).toEqual(0);
        });
        it('should unmute volume if current volume is 0', function () {
            api.medias = {
                main: {
                    volume: 0
                }
            };
            mute.target = api;
            mute.currentVolume = 0.75;
            mute.onClick();
            expect(api.volume).toEqual(0.75);
        });
    });
    describe('onClick (multiple medias)', function () {
        it('should mute volume if current volume is different than 0', function () {
            mute.target = api;
            mute.onClick();
            expect(mute.currentVolume).toBe(1);
            expect(api.volume).toEqual(0);
        });
        it('should unmute volume if current volume is 0', function () {
            api.medias = {
                main: {
                    id: 'main',
                    volume: 0
                },
                secondary: {
                    id: 'secondary',
                    volume: 0
                }
            };
            mute.target = api;
            mute.currentVolume = 0.75;
            mute.onClick();
            expect(api.volume).toEqual(0.75);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbXV0ZS5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmctbXV0ZS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQWlDO0FBQ2pDLHFEQUFpRDtBQUdqRCxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3BCLElBQUksSUFBVyxDQUFDO0lBQ2hCLElBQUksR0FBYyxDQUFDO0lBQ25CLElBQUksR0FBUyxDQUFDO0lBRWQsVUFBVSxDQUFDO1FBQ1AsR0FBRyxHQUFHO1lBQ0YsYUFBYSxFQUFFO2dCQUNYLFlBQVksRUFBRSxVQUFDLElBQUk7b0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDaEIsQ0FBQzthQUNKO1NBQ0osQ0FBQztRQUVGLEdBQUcsR0FBRyxJQUFJLGNBQUssRUFBRSxDQUFDO1FBQ2xCLEdBQUcsQ0FBQyxNQUFNLEdBQUc7WUFDVCxJQUFJLEVBQUU7Z0JBQ0YsRUFBRSxFQUFFLE1BQU07Z0JBQ1YsTUFBTSxFQUFFLENBQUM7YUFDWjtZQUNELFNBQVMsRUFBRTtnQkFDUCxFQUFFLEVBQUUsV0FBVztnQkFDZixNQUFNLEVBQUUsR0FBRzthQUNkO1NBQ0osQ0FBQztRQUdGLElBQUksR0FBRyxJQUFJLGdCQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGdDQUFnQyxFQUFFO1FBQ2pDLEtBQUssQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztZQUNwQyxNQUFNLENBQUM7Z0JBQ0gsTUFBTSxFQUFFLENBQUM7YUFDWixDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztRQUNwQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFFckIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0RCxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRTtRQUN2QyxHQUFHLENBQUMsTUFBTSxHQUFHO1lBQ1QsSUFBSSxFQUFFO2dCQUNGLE1BQU0sRUFBRSxDQUFDO2FBQ1o7U0FDSixDQUFDO1FBRUYsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFFbEIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRTlCLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsd0JBQXdCLEVBQUU7UUFDL0IsRUFBRSxDQUFDLDBEQUEwRCxFQUFFO1lBQzNELEdBQUcsQ0FBQyxNQUFNLEdBQUc7Z0JBQ1QsSUFBSSxFQUFFO29CQUNGLE1BQU0sRUFBRSxJQUFJO2lCQUNmO2FBQ0osQ0FBQztZQUVGLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBRWxCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUVmLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLDZDQUE2QyxFQUFFO1lBQzlDLEdBQUcsQ0FBQyxNQUFNLEdBQUc7Z0JBQ1QsSUFBSSxFQUFFO29CQUNGLE1BQU0sRUFBRSxDQUFDO2lCQUNaO2FBQ0osQ0FBQztZQUVGLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBRWxCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBRTFCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUVmLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsMkJBQTJCLEVBQUU7UUFDbEMsRUFBRSxDQUFDLDBEQUEwRCxFQUFFO1lBQzNELElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBRWxCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUVmLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25DLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLDZDQUE2QyxFQUFFO1lBQzlDLEdBQUcsQ0FBQyxNQUFNLEdBQUc7Z0JBQ1QsSUFBSSxFQUFFO29CQUNGLEVBQUUsRUFBRSxNQUFNO29CQUNWLE1BQU0sRUFBRSxDQUFDO2lCQUNaO2dCQUNELFNBQVMsRUFBRTtvQkFDUCxFQUFFLEVBQUUsV0FBVztvQkFDZixNQUFNLEVBQUUsQ0FBQztpQkFDWjthQUNKLENBQUM7WUFFRixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUVsQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztZQUUxQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFFZixNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZnTXV0ZX0gZnJvbSBcIi4vdmctbXV0ZVwiO1xuaW1wb3J0IHtWZ0FQSX0gZnJvbSBcIi4uLy4uL2NvcmUvc2VydmljZXMvdmctYXBpXCI7XG5pbXBvcnQge0VsZW1lbnRSZWZ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbmRlc2NyaWJlKCdNdXRlIEJ1dHRvbicsICgpID0+IHtcbiAgICBsZXQgbXV0ZTpWZ011dGU7XG4gICAgbGV0IHJlZjpFbGVtZW50UmVmO1xuICAgIGxldCBhcGk6VmdBUEk7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgcmVmID0ge1xuICAgICAgICAgICAgbmF0aXZlRWxlbWVudDoge1xuICAgICAgICAgICAgICAgIGdldEF0dHJpYnV0ZTogKG5hbWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGFwaSA9IG5ldyBWZ0FQSSgpO1xuICAgICAgICBhcGkubWVkaWFzID0ge1xuICAgICAgICAgICAgbWFpbjoge1xuICAgICAgICAgICAgICAgIGlkOiAnbWFpbicsXG4gICAgICAgICAgICAgICAgdm9sdW1lOiAxXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2Vjb25kYXJ5OiB7XG4gICAgICAgICAgICAgICAgaWQ6ICdzZWNvbmRhcnknLFxuICAgICAgICAgICAgICAgIHZvbHVtZTogMC41XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cblxuICAgICAgICBtdXRlID0gbmV3IFZnTXV0ZShyZWYsIGFwaSk7XG4gICAgfSk7XG5cbiAgICBpdCgnU2hvdWxkIGdldCBtZWRpYSBieSBpZCBvbiBpbml0JywgKCkgPT4ge1xuICAgICAgICBzcHlPbihhcGksICdnZXRNZWRpYUJ5SWQnKS5hbmQuY2FsbEZha2UoKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB2b2x1bWU6IDFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG11dGUudmdGb3IgPSAndGVzdCc7XG4gICAgICAgIG11dGUub25QbGF5ZXJSZWFkeSgpO1xuXG4gICAgICAgIGV4cGVjdChhcGkuZ2V0TWVkaWFCeUlkKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgndGVzdCcpO1xuICAgICAgICBleHBlY3QobXV0ZS5jdXJyZW50Vm9sdW1lKS50b0JlKDEpO1xuICAgIH0pO1xuXG4gICAgaXQoJ1Nob3VsZCBnZXQgdm9sdW1lIGZvciBvbmUgbWVkaWEgZmlsZScsICgpID0+IHtcbiAgICAgICAgYXBpLm1lZGlhcyA9IHtcbiAgICAgICAgICAgIG1haW46IHtcbiAgICAgICAgICAgICAgICB2b2x1bWU6IDFcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBtdXRlLnRhcmdldCA9IGFwaTtcblxuICAgICAgICBsZXQgdm9sdW1lID0gbXV0ZS5nZXRWb2x1bWUoKTtcblxuICAgICAgICBleHBlY3Qodm9sdW1lKS50b0JlKDEpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ29uQ2xpY2sgKHNpbmdsZSBtZWRpYSknLCAoKSA9PiB7XG4gICAgICAgIGl0KCdzaG91bGQgbXV0ZSB2b2x1bWUgaWYgY3VycmVudCB2b2x1bWUgaXMgZGlmZmVyZW50IHRoYW4gMCcsICgpID0+IHtcbiAgICAgICAgICAgIGFwaS5tZWRpYXMgPSB7XG4gICAgICAgICAgICAgICAgbWFpbjoge1xuICAgICAgICAgICAgICAgICAgICB2b2x1bWU6IDAuNzVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBtdXRlLnRhcmdldCA9IGFwaTtcblxuICAgICAgICAgICAgbXV0ZS5vbkNsaWNrKCk7XG5cbiAgICAgICAgICAgIGV4cGVjdChtdXRlLmN1cnJlbnRWb2x1bWUpLnRvQmUoMC43NSk7XG4gICAgICAgICAgICBleHBlY3QoYXBpLnZvbHVtZSkudG9FcXVhbCgwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ3Nob3VsZCB1bm11dGUgdm9sdW1lIGlmIGN1cnJlbnQgdm9sdW1lIGlzIDAnLCAoKSA9PiB7XG4gICAgICAgICAgICBhcGkubWVkaWFzID0ge1xuICAgICAgICAgICAgICAgIG1haW46IHtcbiAgICAgICAgICAgICAgICAgICAgdm9sdW1lOiAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgICAgICAgIG11dGUuY3VycmVudFZvbHVtZSA9IDAuNzU7XG5cbiAgICAgICAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICAgICAgICBleHBlY3QoYXBpLnZvbHVtZSkudG9FcXVhbCgwLjc1KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnb25DbGljayAobXVsdGlwbGUgbWVkaWFzKScsICgpID0+IHtcbiAgICAgICAgaXQoJ3Nob3VsZCBtdXRlIHZvbHVtZSBpZiBjdXJyZW50IHZvbHVtZSBpcyBkaWZmZXJlbnQgdGhhbiAwJywgKCkgPT4ge1xuICAgICAgICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgICAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICAgICAgICBleHBlY3QobXV0ZS5jdXJyZW50Vm9sdW1lKS50b0JlKDEpO1xuICAgICAgICAgICAgZXhwZWN0KGFwaS52b2x1bWUpLnRvRXF1YWwoMCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGl0KCdzaG91bGQgdW5tdXRlIHZvbHVtZSBpZiBjdXJyZW50IHZvbHVtZSBpcyAwJywgKCkgPT4ge1xuICAgICAgICAgICAgYXBpLm1lZGlhcyA9IHtcbiAgICAgICAgICAgICAgICBtYWluOiB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiAnbWFpbicsXG4gICAgICAgICAgICAgICAgICAgIHZvbHVtZTogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5OiB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgICAgICAgICAgdm9sdW1lOiAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgICAgICAgIG11dGUuY3VycmVudFZvbHVtZSA9IDAuNzU7XG5cbiAgICAgICAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICAgICAgICBleHBlY3QoYXBpLnZvbHVtZSkudG9FcXVhbCgwLjc1KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcbiJdfQ==