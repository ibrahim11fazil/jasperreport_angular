!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/router")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","@angular/router"],t):t((e.ng=e.ng||{},e.ng.breadcrumb={}),e.ng.core,e.common,e.router)}(this,function(e,t,r,n){"use strict";var o=function(){function e(){this.routesFriendlyNames=new Map,this.routesFriendlyNamesRegex=new Map,this.routesWithCallback=new Map,this.routesWithCallbackRegex=new Map,this.hideRoutes=new Array,this.hideRoutesRegex=new Array}return e.prototype.addFriendlyNameForRoute=function(e,t){this.routesFriendlyNames.set(e,t)},e.prototype.addFriendlyNameForRouteRegex=function(e,t){this.routesFriendlyNamesRegex.set(e,t)},e.prototype.addCallbackForRoute=function(e,t){this.routesWithCallback.set(e,t)},e.prototype.addCallbackForRouteRegex=function(e,t){this.routesWithCallbackRegex.set(e,t)},e.prototype.getFriendlyNameForRoute=function(e){var t=e.substr(e.lastIndexOf("/")+1,e.length),r=t;return this.routesFriendlyNames.forEach(function(t,n,o){n===e&&(r=t)}),this.routesFriendlyNamesRegex.forEach(function(t,n,o){new RegExp(n).exec(e)&&(r=t)}),this.routesWithCallback.forEach(function(n,o,i){o===e&&(r=n(t))}),this.routesWithCallbackRegex.forEach(function(n,o,i){new RegExp(o).exec(e)&&(r=n(t))}),r},e.prototype.hideRoute=function(e){-1===this.hideRoutes.indexOf(e)&&this.hideRoutes.push(e)},e.prototype.hideRouteRegex=function(e){-1===this.hideRoutesRegex.indexOf(e)&&this.hideRoutesRegex.push(e)},e.prototype.isRouteHidden=function(e){var t=this.hideRoutes.indexOf(e)>-1;return this.hideRoutesRegex.forEach(function(r){new RegExp(r).exec(e)&&(t=!0)}),t},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[]},e}(),i=function(){function e(e,t){this.router=e,this.breadcrumbService=t,this.useBootstrap=!0,this.prefix=""}return e.prototype.ngOnInit=function(){var e=this;this._urls=new Array,this.prefix.length>0&&this._urls.unshift(this.prefix),this._routerSubscription=this.router.events.subscribe(function(t){t instanceof n.NavigationEnd&&(e._urls.length=0,e.generateBreadcrumbTrail(t.urlAfterRedirects?t.urlAfterRedirects:t.url))})},e.prototype.ngOnChanges=function(e){this._urls&&(this._urls.length=0,this.generateBreadcrumbTrail(this.router.url))},e.prototype.generateBreadcrumbTrail=function(e){this.breadcrumbService.isRouteHidden(e)||this._urls.unshift(e),e.lastIndexOf("/")>0?this.generateBreadcrumbTrail(e.substr(0,e.lastIndexOf("/"))):this.prefix.length>0&&this._urls.unshift(this.prefix)},e.prototype.navigateTo=function(e){this.router.navigateByUrl(e)},e.prototype.friendlyName=function(e){return e?this.breadcrumbService.getFriendlyNameForRoute(e):""},e.prototype.ngOnDestroy=function(){this._routerSubscription.unsubscribe()},e.decorators=[{type:t.Component,args:[{selector:"breadcrumb",template:'\n        <ul [class.breadcrumb]="useBootstrap">\n            <li *ngFor="let url of _urls; let last = last" [ngClass]="{\'breadcrumb-item\': useBootstrap, \'active\': last}"> \x3c!-- disable link of last item --\x3e\n                <a role="button" *ngIf="!last && url == prefix" (click)="navigateTo(\'/\')">{{url}}</a>\n                <a role="button" *ngIf="!last && url != prefix" (click)="navigateTo(url)">{{friendlyName(url)}}</a>\n                <span *ngIf="last">{{friendlyName(url)}}</span>\n                <span *ngIf="last && url == prefix">{{friendlyName(\'/\')}}</span>\n            </li>\n        </ul>\n    '}]}],e.ctorParameters=function(){return[{type:n.Router},{type:o}]},e.propDecorators={useBootstrap:[{type:t.Input}],prefix:[{type:t.Input}]},e}(),u=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[o]}},e.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule],exports:[i],declarations:[i]}]}],e.ctorParameters=function(){return[]},e}();e.Ng5BreadcrumbModule=u,e.BreadcrumbComponent=i,e.BreadcrumbService=o,Object.defineProperty(e,"__esModule",{value:!0})});