/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Inject, forwardRef } from '@angular/core';
import { connectClearAll } from 'instantsearch.js/es/connectors';
import { BaseWidget } from '../base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
import { noop } from '../utils';
var NgAisClearRefinements = /** @class */ (function (_super) {
    tslib_1.__extends(NgAisClearRefinements, _super);
    function NgAisClearRefinements(instantSearchParent) {
        var _this = _super.call(this, 'ClearRefinements') || this;
        _this.instantSearchParent = instantSearchParent;
        _this.buttonLabel = 'Clear refinements';
        _this.clearsQuery = false;
        _this.excludeAttributes = [];
        _this.state = {
            hasRefinements: false,
            refine: noop,
        };
        return _this;
    }
    Object.defineProperty(NgAisClearRefinements.prototype, "isHidden", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.state.hasRefinements && this.autoHideContainer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgAisClearRefinements.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // we need to `createWidget` from `ngOnInit` to have `@Input()` intialized
        this.createWidget(connectClearAll, {
            clearsQuery: this.clearsQuery,
            excludeAttributes: this.excludeAttributes,
        });
        _super.prototype.ngOnInit.call(this);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NgAisClearRefinements.prototype.handleClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.state.hasRefinements) {
            this.state.refine();
        }
    };
    NgAisClearRefinements.decorators = [
        { type: Component, args: [{
                    selector: 'ais-clear-refinements',
                    template: "\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{buttonLabel}}\n      </button>\n    </div>\n  ",
                },] },
    ];
    /** @nocollapse */
    NgAisClearRefinements.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgAisInstantSearch; }),] }] }
    ]; };
    NgAisClearRefinements.propDecorators = {
        buttonLabel: [{ type: Input }],
        clearsQuery: [{ type: Input }],
        excludeAttributes: [{ type: Input }]
    };
    return NgAisClearRefinements;
}(BaseWidget));
export { NgAisClearRefinements };
if (false) {
    /** @type {?} */
    NgAisClearRefinements.prototype.buttonLabel;
    /** @type {?} */
    NgAisClearRefinements.prototype.clearsQuery;
    /** @type {?} */
    NgAisClearRefinements.prototype.excludeAttributes;
    /** @type {?} */
    NgAisClearRefinements.prototype.state;
    /** @type {?} */
    NgAisClearRefinements.prototype.instantSearchParent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItcmVmaW5lbWVudHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWluc3RhbnRzZWFyY2gvIiwic291cmNlcyI6WyJjbGVhci1yZWZpbmVtZW50cy9jbGVhci1yZWZpbmVtZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWhDO0lBaUIyQyxpREFBVTtJQWNuRCwrQkFFUyxtQkFBd0I7UUFGakMsWUFJRSxrQkFBTSxrQkFBa0IsQ0FBQyxTQUMxQjtRQUhRLHlCQUFtQixHQUFuQixtQkFBbUIsQ0FBSztRQWZqQixpQkFBVyxHQUFXLG1CQUFtQixDQUFDO1FBQzFDLGlCQUFXLEdBQVksS0FBSyxDQUFDO1FBQzdCLHVCQUFpQixHQUFhLEVBQUUsQ0FBQztRQUUxQyxXQUFLLEdBQUc7WUFDYixjQUFjLEVBQUUsS0FBSztZQUNyQixNQUFNLEVBQUUsSUFBSTtTQUNiLENBQUM7O0lBV0YsQ0FBQztJQVRELHNCQUFJLDJDQUFROzs7O1FBQVo7WUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQzlELENBQUM7OztPQUFBOzs7O0lBU00sd0NBQVE7OztJQUFmO1FBQ0UsMEVBQTBFO1FBQzFFLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFO1lBQ2pDLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztZQUM3QixpQkFBaUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1NBQzFDLENBQUMsQ0FBQztRQUVILGlCQUFNLFFBQVEsV0FBRSxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRU0sMkNBQVc7Ozs7SUFBbEIsVUFBbUIsS0FBaUI7UUFDbEMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRXZCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUU7WUFDN0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNyQjtJQUNILENBQUM7O2dCQXRERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLG1WQWFUO2lCQUNGOzs7O2dEQWdCSSxNQUFNLFNBQUMsVUFBVSxDQUFDLGNBQU0sT0FBQSxrQkFBa0IsRUFBbEIsQ0FBa0IsQ0FBQzs7OzhCQWQ3QyxLQUFLOzhCQUNMLEtBQUs7b0NBQ0wsS0FBSzs7SUFtQ1IsNEJBQUM7Q0FBQSxBQXZERCxDQWlCMkMsVUFBVSxHQXNDcEQ7U0F0Q1kscUJBQXFCOzs7SUFDaEMsNENBQTBEOztJQUMxRCw0Q0FBNkM7O0lBQzdDLGtEQUFpRDs7SUFFakQsc0NBR0U7O0lBT0Esb0RBQytCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgSW5qZWN0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb25uZWN0Q2xlYXJBbGwgfSBmcm9tICdpbnN0YW50c2VhcmNoLmpzL2VzL2Nvbm5lY3RvcnMnO1xuaW1wb3J0IHsgQmFzZVdpZGdldCB9IGZyb20gJy4uL2Jhc2Utd2lkZ2V0JztcbmltcG9ydCB7IE5nQWlzSW5zdGFudFNlYXJjaCB9IGZyb20gJy4uL2luc3RhbnRzZWFyY2gvaW5zdGFudHNlYXJjaCc7XG5pbXBvcnQgeyBub29wIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhaXMtY2xlYXItcmVmaW5lbWVudHMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXZcbiAgICAgIFtjbGFzc109XCJjeCgpXCJcbiAgICAgICpuZ0lmPVwiIWlzSGlkZGVuXCJcbiAgICA+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIFtjbGFzc109XCJjeCgnYnV0dG9uJykgKyAoIXN0YXRlLmhhc1JlZmluZW1lbnRzID8gKCcgJyArIGN4KCdidXR0b24nLCAnZGlzYWJsZWQnKSkgOiAnJylcIlxuICAgICAgICAoY2xpY2spPVwiaGFuZGxlQ2xpY2soJGV2ZW50KVwiXG4gICAgICAgIFtkaXNhYmxlZF09XCIhc3RhdGUuaGFzUmVmaW5lbWVudHNcIlxuICAgICAgPlxuICAgICAgICB7e2J1dHRvbkxhYmVsfX1cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBOZ0Fpc0NsZWFyUmVmaW5lbWVudHMgZXh0ZW5kcyBCYXNlV2lkZ2V0IHtcbiAgQElucHV0KCkgcHVibGljIGJ1dHRvbkxhYmVsOiBzdHJpbmcgPSAnQ2xlYXIgcmVmaW5lbWVudHMnO1xuICBASW5wdXQoKSBwdWJsaWMgY2xlYXJzUXVlcnk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgcHVibGljIGV4Y2x1ZGVBdHRyaWJ1dGVzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIHB1YmxpYyBzdGF0ZSA9IHtcbiAgICBoYXNSZWZpbmVtZW50czogZmFsc2UsXG4gICAgcmVmaW5lOiBub29wLFxuICB9O1xuXG4gIGdldCBpc0hpZGRlbigpIHtcbiAgICByZXR1cm4gIXRoaXMuc3RhdGUuaGFzUmVmaW5lbWVudHMgJiYgdGhpcy5hdXRvSGlkZUNvbnRhaW5lcjtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBOZ0Fpc0luc3RhbnRTZWFyY2gpKVxuICAgIHB1YmxpYyBpbnN0YW50U2VhcmNoUGFyZW50OiBhbnlcbiAgKSB7XG4gICAgc3VwZXIoJ0NsZWFyUmVmaW5lbWVudHMnKTtcbiAgfVxuXG4gIHB1YmxpYyBuZ09uSW5pdCgpIHtcbiAgICAvLyB3ZSBuZWVkIHRvIGBjcmVhdGVXaWRnZXRgIGZyb20gYG5nT25Jbml0YCB0byBoYXZlIGBASW5wdXQoKWAgaW50aWFsaXplZFxuICAgIHRoaXMuY3JlYXRlV2lkZ2V0KGNvbm5lY3RDbGVhckFsbCwge1xuICAgICAgY2xlYXJzUXVlcnk6IHRoaXMuY2xlYXJzUXVlcnksXG4gICAgICBleGNsdWRlQXR0cmlidXRlczogdGhpcy5leGNsdWRlQXR0cmlidXRlcyxcbiAgICB9KTtcblxuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgaWYgKHRoaXMuc3RhdGUuaGFzUmVmaW5lbWVudHMpIHtcbiAgICAgIHRoaXMuc3RhdGUucmVmaW5lKCk7XG4gICAgfVxuICB9XG59XG4iXX0=