{"version":3,"sources":["../../temp/inline/card.ts"],"names":[],"mappings":"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","file":"card.js","sourceRoot":"","sourcesContent":["import {Directive, Input, ContentChildren, QueryList, ElementRef} from '@angular/core';\nimport {NgxCardNumberTemplate, NgxCardNameTemplate, NgxCardExpiryTemplate, NgxCardCvcTemplate} from './inputs';\n\ndeclare var Card;\n\nconst defaultPlaceholders = {\n\tnumber: '•••• •••• •••• ••••',\n\tname: 'Full Name',\n\texpiry: '••/••',\n\tcvc: '•••',\n};\n\nconst defaultMessages = {\n\tvalidDate: 'valid\\nthru',\n\tmonthYear: 'month/year',\n};\n\n\nexport class NgxCard {\n\n\t// a selector or DOM element for the container\n\t// where you want the card to appear\n\t container: any;\n\n\t width: number; // optional — default 350px\n\n\t// Strings for translation - optional\n\t_messages;\n\t set messages(_messages: any) {\n\t\tthis._messages = Object.assign({}, defaultMessages, _messages);\n\t}\n\tget messages() {\n\t\treturn this._messages;\n\t}\n\n\t// Default placeholders for rendered fields - optional\n\t_placeholders;\n\t set placeholders(_placeholders: any) {\n\t\tthis._placeholders = Object.assign({}, defaultPlaceholders, _placeholders);\n\t}\n\tget placeholders() {\n\t\treturn this._placeholders;\n\t}\n\n\t masks: any;\n\n\t formatting: boolean = true; // optional - default true\n\n\t// if true, will log helpful messages for setting up Card\n\t debug: boolean = false; // optional - default false\n\n\t numbers: QueryList<NgxCardNumberTemplate>;\n\t names: QueryList<NgxCardNameTemplate>;\n\t expiries: QueryList<NgxCardExpiryTemplate>;\n\t cvcs: QueryList<NgxCardCvcTemplate>;\n\n\tconstructor(private element: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tnew Card({\n\t\t\tform: this.element.nativeElement,\n\t\t\tcontainer: this.container,\n\t\t\twidth: this.width,\n\t\t\tformSelectors: {\n\t\t\t\tnumberInput: this.findSelectors(this.numbers),\n\t\t\t\texpiryInput: this.findSelectors(this.expiries),\n\t\t\t\tcvcInput: this.findSelectors(this.cvcs),\n\t\t\t\tnameInput: this.findSelectors(this.names),\n\t\t\t},\n\t\t\tformatting: this.formatting,\n\t\t\tmessages: this.messages,\n\t\t\tplaceholders: this.placeholders,\n\t\t\tmasks: this.masks,\n\t\t\tdebug: this.debug,\n\t\t});\n\t}\n\n\tfindSelectors(list: QueryList<any>): string {\n\t\treturn list.map(template => template.elementRef.nativeElement.tagName.toLowerCase() + '[name=\"' + template.name + '\"]')\n\t\t\t\t   .join(', ');\n\t}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[card]',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: Input },],\n'width': [{ type: Input, args: ['card-width', ] },],\n'messages': [{ type: Input },],\n'placeholders': [{ type: Input },],\n'masks': [{ type: Input },],\n'formatting': [{ type: Input },],\n'debug': [{ type: Input },],\n'numbers': [{ type: ContentChildren, args: [NgxCardNumberTemplate, {descendants: true}, ] },],\n'names': [{ type: ContentChildren, args: [NgxCardNameTemplate, {descendants: true}, ] },],\n'expiries': [{ type: ContentChildren, args: [NgxCardExpiryTemplate, {descendants: true}, ] },],\n'cvcs': [{ type: ContentChildren, args: [NgxCardCvcTemplate, {descendants: true}, ] },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}