{"version":3,"file":"angular-instantsearch.js.map","sources":["ng://angular-instantsearch/utils.ts","ng://angular-instantsearch/base-widget.ts","ng://angular-instantsearch/version.ts","ng://angular-instantsearch/instantsearch/instantsearch.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.module.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.module.ts","ng://angular-instantsearch/current-refinements/current-refinements.ts","ng://angular-instantsearch/current-refinements/current-refinements.module.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu-item.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.module.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.module.ts","ng://angular-instantsearch/highlight/highlight.ts","ng://angular-instantsearch/highlight/highlight.module.ts","ng://angular-instantsearch/hits/hits.ts","ng://angular-instantsearch/hits/hits.module.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.module.ts","ng://angular-instantsearch/instantsearch/instantsearch.module.ts","ng://angular-instantsearch/menu/menu.ts","ng://angular-instantsearch/menu/menu.module.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.module.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.module.ts","ng://angular-instantsearch/pagination/pagination.ts","ng://angular-instantsearch/pagination/pagination.module.ts","ng://angular-instantsearch/range-slider/range-slider.ts","ng://angular-instantsearch/range-slider/range-slider.module.ts","ng://angular-instantsearch/refinement-list/refinement-list.ts","ng://angular-instantsearch/refinement-list/facets-search.ts","ng://angular-instantsearch/refinement-list/refinement-list.module.ts","ng://angular-instantsearch/search-box/search-box.ts","ng://angular-instantsearch/search-box/search-box.module.ts","ng://angular-instantsearch/sort-by/sort-by.ts","ng://angular-instantsearch/sort-by/sort-by.module.ts","ng://angular-instantsearch/rating-menu/rating-menu.ts","ng://angular-instantsearch/rating-menu/rating-menu.module.ts","ng://angular-instantsearch/stats/stats.ts","ng://angular-instantsearch/stats/stats.module.ts","ng://angular-instantsearch/toggle/toggle.ts","ng://angular-instantsearch/toggle/toggle.module.ts","ng://angular-instantsearch/range-input/range-input.ts","ng://angular-instantsearch/range-input/range-input.module.ts","ng://angular-instantsearch/panel/panel.ts","ng://angular-instantsearch/panel/panel.module.ts","ng://angular-instantsearch/configure/configure.ts","ng://angular-instantsearch/configure/configure.module.ts","ng://angular-instantsearch/create-ssr-algolia-client.ts","ng://angular-instantsearch/parse-server-request.ts","ng://angular-instantsearch/index.ts"],"sourcesContent":["export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    if (element) {\n      const scoppedWidgetName = `ais-${widgetName}-${element}`;\n\n      // output `ais-Widget-Header|Body|Footer ais-Header|Body|Footer`\n      if (element === 'header' || element === 'body' || element === 'footer') {\n        const nonScoppedWidgetName = `ais-${element}`;\n        return `${scoppedWidgetName} ${nonScoppedWidgetName}`;\n      }\n\n      // output `ais-Widget-Xyz--abc`\n      if (subElement) {\n        return `${scoppedWidgetName}--${subElement}`;\n      }\n\n      // output `ais-Widget-Xyz`\n      return scoppedWidgetName;\n    }\n\n    // output `ais-Widget`\n    return `ais-${widgetName}`;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\n\nexport class Widget {\n  public init: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: object[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public getConfiguration?: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  public instantSearchParent: any;\n\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: object = {};\n  public cx: Function;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    // add widget to the InstantSearch Instance\n    this.instantSearchParent.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchParent.platformId)) {\n      this.instantSearchParent.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  // helper method for genering item list className\n  public getItemClass(item: { isRefined?: boolean }) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = \"2.2.1\";\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\nimport instantsearch from 'instantsearch.js/es';\nimport { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nimport { Widget } from '../base-widget';\nimport { VERSION } from '../version';\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type SearchRequest = {\n  indexName: string;\n  params: SearchRequestParameters;\n};\n\nexport type SearchForFacetValuesRequest = {\n  indexName: string;\n  params: SearchForFacetValuesRequestParameters;\n};\n\n// Documentation: https://www.algolia.com/doc/api-reference/search-api-parameters/\nexport type SearchParameters = {\n  // Attributes\n  attributesToRetrieve?: string[];\n  restrictSearchableAttributes?: string[];\n\n  // Filtering\n  filters?: string;\n  facetFilters?: string[];\n  optionalFilters?: string[];\n  numericFilters?: string[];\n  sumOrFiltersScores?: boolean;\n\n  // Faceting\n  facets?: string[];\n  maxValuesPerFacet?: number;\n  facetingAfterDistinct?: boolean;\n  sortFacetValuesBy?: string;\n\n  // Highlighting / Snippeting\n  attributesToHighlight?: string[];\n  attributesToSnippet?: string[];\n  highlightPreTag?: string;\n  highlightPostTag?: string;\n  snippetEllipsisText?: string;\n  restrictHighlightAndSnippetArrays?: boolean;\n\n  // Pagination\n  page?: number;\n  hitsPerPage?: number;\n  offset?: number;\n  length?: number;\n\n  // Typos\n  minWordSizefor1Typo?: number;\n  minWordSizefor2Typos?: number;\n  typoTolerance?: string | boolean;\n  allowTyposOnNumericTokens?: boolean;\n  ignorePlurals?: boolean | string[];\n  disableTypoToleranceOnAttributes?: string[];\n\n  // Geo-Search\n  aroundLatLng?: string;\n  aroundLatLngViaIP?: boolean;\n  aroundRadius?: number | 'all';\n  aroundPrecision?: number;\n  minimumAroundRadius?: number;\n  insideBoundingBox?: GeoRectangle | GeoRectangle[];\n  insidePolygon?: GeoPolygon | GeoPolygon[];\n\n  // Query Strategy\n  queryType?: string;\n  removeWordsIfNoResults?: string;\n  advancedSyntax?: boolean;\n  optionalWords?: string | string[];\n  removeStopWords?: boolean | string[];\n  disableExactOnAttributes?: string[];\n  exactOnSingleWordQuery?: string;\n  alternativesAsExact?: string[];\n\n  // Query Rules\n  enableRules?: boolean;\n  ruleContexts?: string[];\n\n  // Advanced\n  minProximity?: number;\n  responseFields?: string[];\n  maxFacetHits?: number;\n  percentileComputation?: boolean;\n  distinct?: number | boolean;\n  getRankingInfo?: boolean;\n  clickAnalytics?: boolean;\n  analytics?: boolean;\n  analyticsTags?: string[];\n  synonyms?: boolean;\n  replaceSynonymsInHighlight?: boolean;\n};\n\nexport interface SearchRequestParameters extends SearchParameters {\n  query: string;\n}\n\nexport interface SearchForFacetValuesRequestParameters\n  extends SearchParameters {\n  facetQuery: string;\n  facetName: string;\n}\n\nexport type GeoRectangle = [number, number, number, number];\nexport type GeoPolygon = [number, number, number, number, number, number];\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-multiple-indexes\nexport type SearchResponse = {\n  hits: Hit[];\n  page?: number;\n  nbHits?: number;\n  nbPages?: number;\n  hitsPerPage?: number;\n  processingTimeMS?: number;\n  query?: string;\n  params?: string;\n  index?: string;\n};\n\nexport type Hit = {\n  _highlightResult?: object;\n};\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-for-facet-values\nexport type SearchForFacetValuesResponse = {\n  value: string;\n  highlighted?: string;\n  count?: number;\n};\n\nexport type SearchClient = {\n  search: (requests: SearchRequest[]) => Promise<{ results: SearchResponse[] }>;\n  searchForFacetValues?: (\n    requests: SearchForFacetValuesRequest[]\n  ) => Promise<{ facetHits: SearchForFacetValuesResponse[] }[]>;\n};\n\nexport type InstantSearchConfig = {\n  appId?: string;\n  apiKey?: string;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n  createAlgoliaClient?: (\n    algoliasearch: Function,\n    appId: string,\n    apiKey: string\n  ) => object;\n  searchClient?: SearchClient;\n  searchParameters?: SearchParameters | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n  routing?:\n    | boolean\n    | {\n        router?: {\n          onUpdate: (cb: (object) => void) => void;\n          read: () => object;\n          write: (routeState: object) => void;\n          createURL: (routeState: object) => string;\n          dispose: () => void;\n        };\n        stateMapping?: {\n          stateToRoute(object): object;\n          routeToState(object): object;\n        };\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public refresh: () => void;\n  public dispose: () => void;\n}\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener('render', this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: '__ais-highlight__',\n      highlightPostTag: '__/ais-highlight__',\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      if (typeof config.urlSync !== 'undefined') delete config.urlSync;\n      if (typeof config.routing !== 'undefined') delete config.routing;\n    }\n\n    // custom algolia client agent\n    if (!config.searchClient && !config.createAlgoliaClient) {\n      const client = algoliasearch(config.appId, config.apiKey);\n      client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n      config.searchClient = client;\n      config.appId = undefined;\n      config.apiKey = undefined;\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type BreadcrumbState = {\n  createURL: Function;\n  items: BreadcrumbItem[];\n  refine: Function;\n};\n\nexport type BreadcrumbItem = {\n  name: string;\n  value: string;\n};\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [class]=\"cx('item', item.isLast ? 'selected' : undefined)\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.name}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.name}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends BaseWidget {\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public rootPath?: string;\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n    }));\n  }\n\n  public state: BreadcrumbState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, item: BreadcrumbItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectClearAll } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{buttonLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends BaseWidget {\n  @Input() public buttonLabel: string = 'Clear refinements';\n  @Input() public clearsQuery: boolean = false;\n  @Input() public excludeAttributes: string[] = [];\n\n  public state = {\n    hasRefinements: false,\n    refine: noop,\n  };\n\n  get isHidden() {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    // we need to `createWidget` from `ngOnInit` to have `@Input()` intialized\n    this.createWidget(connectClearAll, {\n      clearsQuery: this.clearsQuery,\n      excludeAttributes: this.excludeAttributes,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectCurrentRefinedValues } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop, capitalize } from '../utils';\n\nexport type CurrentRefinementsState = {\n  attributes: {};\n  clearAllClick: Function;\n  clearAllURL: Function;\n  createURL: Function;\n  refine: Function;\n  refinements: {}[];\n};\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'before' || clearRefinements === true\">\n        {{clearRefinementsLabel}}\n      </button>\n\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let refinement of refinements\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{refinement.label}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let item of refinement.items\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{item.name}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, item)\">â</button>\n          </span>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'after'\">\n        {{clearRefinementsLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // render options\n  @Input() public clearRefinements: 'before' | 'after' | boolean = 'after';\n  @Input() public clearRefinementsLabel: string = 'Clear refinements';\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public onlyListedAttributes: boolean = false;\n  @Input() public clearsQuery: boolean = false;\n  @Input()\n  public attributes: {\n    name: string;\n    label: string;\n  }[] = [];\n\n  public state: CurrentRefinementsState = {\n    attributes: {},\n    clearAllClick: noop,\n    clearAllURL: noop,\n    createURL: noop,\n    refine: noop,\n    refinements: [],\n  };\n\n  get isHidden() {\n    return this.state.refinements.length === 0 && this.autoHideContainer;\n  }\n\n  get refinements() {\n    const items =\n      typeof this.transformItems === 'function'\n        ? this.transformItems(this.state.refinements)\n        : this.state.refinements;\n\n    // group refinements by category? (attributeName && type)\n    return items.reduce((res, { type, attributeName, ...refinement }) => {\n      const match = res.find(\n        r => r.attributeName === attributeName && r.type === type\n      );\n      if (match) {\n        match.items.push({ type, attributeName, ...refinement });\n      } else {\n        res.push({\n          type,\n          attributeName,\n          label: capitalize(attributeName),\n          items: [{ type, attributeName, ...refinement }],\n        });\n      }\n      return res;\n    }, []);\n  }\n\n  get json() {\n    return JSON.stringify(this.refinements, null, 4);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinedValues, {\n      attributes: this.attributes,\n      clearsQuery: this.clearsQuery,\n      onlyListedAttributes: this.onlyListedAttributes,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n\n  public handleClearAllClick(event: MouseEvent) {\n    event.preventDefault();\n    this.state.clearAllClick();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type HierarchicalMenuState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends BaseWidget {\n  // render option\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public separator?: string = ' > ';\n  @Input() public rootPath?: string;\n  @Input() public showParentLevel?: boolean;\n  @Input() public limit?: number | string = 10;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: HierarchicalMenuState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[];\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass(item)\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: (string) => void;\n  @Input() public createURL: (string) => string;\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(item) {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any) {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ResultsPerPageState = {\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends BaseWidget {\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n    default?: boolean;\n  }[];\n\n  public state: ResultsPerPageState = {\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, { items: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","const get = require('lodash/get');\nimport { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-highlight',\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = 'em';\n\n  cx = bem('Highlight');\n\n  get content() {\n    if (this.attribute === 'highlighted') {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty('_highlightResult')) {\n      const attributeHighlighted = get(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === 'string'\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = get(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return '';\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp('<em>', 'g'),\n        `<${this.tagName} class=\"${this.cx('highlighted')}\">`\n      )\n      .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectHits } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: TemplateRef<any>;\n\n  // render options\n  @Input() transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: { hits: {}[]; results: {} } = { hits: [], results: {} };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Hits');\n    this.createWidget(connectHits, { escapeHits: true });\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === 'function'\n          ? this.transformItems(state.hits)\n          : state.hits,\n    };\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectInfiniteHits } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [class]=\"cx('showMore')\"\n        (click)=\"showMore($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: any;\n\n  // render options\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input() public transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: {\n    hits: {}[];\n    isLastPage: boolean;\n    showMore: Function;\n    results: {};\n  } = {\n    hits: [],\n    isLastPage: false,\n    showMore: noop,\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('InfiniteHits');\n    this.createWidget(connectInfiniteHits, { escapeHits: true });\n  }\n\n  public showMore(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === 'function'\n          ? this.transformItems(state.hits)\n          : state.hits,\n    };\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type MenuState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n};\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public limit?: number | string = 10;\n  @Input() public showMoreLimit?: number | string;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: MenuState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy,\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericRefinementListState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends BaseWidget {\n  @Input() public attribute: string;\n  @Input()\n  public items: {\n    name: string;\n    start?: number;\n    end?: number;\n  }[];\n\n  public state: NumericRefinementListState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericRefinementList, {\n      attributeName: this.attribute,\n      options: this.items,\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericSelector } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericSelectorState = {\n  currentRefinement?: string | null;\n  options: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-numeric-selector',\n  template: `\n    <div [class]=\"cx('')\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisNumericSelector extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public operator: '<' | '<=' | '=' | '>=' | '>' | '!=' = '=';\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n  }[];\n\n  public state: NumericSelectorState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericSelector');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericSelector, {\n      attributeName: this.attribute,\n      operator: this.operator,\n      options: this.items,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericSelector } from './numeric-selector';\n\n@NgModule({\n  declarations: [NgAisNumericSelector],\n  entryComponents: [NgAisNumericSelector],\n  exports: [NgAisNumericSelector],\n  imports: [CommonModule],\n})\nexport class NgAisNumericSelectorModule {}\n","const range = require('lodash/range');\nimport { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            â¹â¹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            â¹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            âº\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            âºâº\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends BaseWidget {\n  // render options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = false;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n  @Input() public padding: number | string = 3;\n\n  // connector optionsw\n  @Input() public totalPages?: number | string;\n\n  public state = {\n    createURL: noop,\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === 'string'\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));\n      }\n\n      if (maxDelta > nbPages) {\n        return range(\n          currentRefinement - pagesPadding - (maxDelta - nbPages),\n          nbPages\n        );\n      }\n\n      return range(\n        currentRefinement - pagesPadding,\n        currentRefinement + pagesPadding + 1\n      );\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      maxPages: parseNumberInput(this.totalPages),\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import { Component, Input, ViewChild, Inject, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RangeSliderState = {\n  range: { min: number; max: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends BaseWidget {\n  @ViewChild('sliderContainer') public sliderContainer: any;\n\n  // render options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  public state: RangeSliderState = {\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    this.slider.updateOptions({ disabled, range, start });\n  };\n\n  public handleChange = (values: string[] | number[]) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('showMore')\"\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public transformItems?: Function;\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public operator: 'or' | 'and' = 'or';\n  @Input() public limit: number | string = 10;\n  @Input() public showMoreLimit: number | string;\n  @Input() public sortBy: string[] | ((item: object) => number);\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RefinementList');\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      operator: this.operator,\n      sortBy: this.sortBy,\n      escapeFacetValues: true,\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n} from '@angular/core';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox extends BaseWidget implements AfterViewInit {\n  @ViewChild('searchBox') searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state = {\n    query: '',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SearchBox');\n    this.createWidget(connectSearchBox);\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.searchBox.nativeElement.value);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectSortBySelector } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends BaseWidget {\n  @Input()\n  public items: {\n    name: string;\n    label: string;\n  }[];\n\n  public state: {\n    currentRefinement: string | null;\n    options: {}[];\n    refine: Function;\n  } = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBySelector, { indices: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectStarRating } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type RatingMenuState = {\n  createURL: Function;\n  hasNoResults: boolean;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon')\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends BaseWidget {\n  // render options\n  @Input() public andUpLabel: string = '& Up';\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public max?: number = 5;\n\n  public state: RatingMenuState = {\n    createURL: noop,\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectStarRating, {\n      attributeName: this.attribute,\n      max: this.max,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Stats');\n    this.createWidget(connectStats);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectToggle } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ToggleState = {\n  createURL: Function;\n  refine: Function;\n  value: {\n    name?: string;\n    count?: number;\n    isRefined?: boolean;\n  };\n};\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"cx('item')\"\n          (click)=\"handleClick($event)\">\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{state.value.name}}\"\n              [checked]=\"state.value.isRefined\"\n            />\n\n            <span [class]=\"cx('labelText')\">\n              {{label || state.value.name}}\n            </span>\n\n            <span [class]=\"cx('count')\">{{state.value.count}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisToggle extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public label: string;\n  @Input()\n  public values: { on?: boolean; off?: boolean } = { on: true, off: undefined };\n\n  public state: ToggleState = {\n    createURL: noop,\n    refine: noop,\n    value: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggle, {\n      attributeName: this.attribute,\n      label: this.label,\n      values: this.values,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type NumericRangeState = {\n  range: { min?: number; max?: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'min')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'max')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends BaseWidget {\n  // render options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  // inner state\n  public minInputValue?: number | string = '';\n  public maxInputValue?: number | string = '';\n\n  get step() {\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Testability,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  SearchParameters,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends BaseWidget {\n  private internalSearchParameters: SearchParameters;\n  private differ: KeyValueDiffer<string, any>; // SearchParameters (I don't know how to get the values of the type)\n\n  public state: { refine: Function } = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: SearchParameters) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.internalSearchParameters,\n    });\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import * as algoliasearchProxy from 'algoliasearch/index';\nimport * as encodeProxy from 'querystring-es3/encode';\n\nimport { VERSION } from './version';\n\n// AOT + Rollup workaround\n// https://github.com/rollup/rollup/issues/1267#issuecomment-296395734\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRAlgoliaClient({\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n}) {\n  console.warn(\n    '`createSSRAlgoliaClient` is deprecated in favor of `createSSRSearchClient` to be plugged to `searchClient`.'\n  );\n\n  return (_, appId, apiKey) =>\n    createSSRSearchClient({\n      appId,\n      apiKey,\n      httpClient,\n      HttpHeaders,\n      transferState,\n      makeStateKey,\n    });\n}\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n}) {\n  const client = algoliasearch(appId, apiKey, {});\n  client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n  client._request = (rawUrl, opts) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      opts.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(opts.headers);\n\n    const transferStateKey = makeStateKey(`ngais(${opts.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const resp = JSON.parse(transferState.get(transferStateKey, {}));\n      return Promise.resolve({\n        statusCode: resp.status,\n        body: resp.body,\n        headers: resp.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(opts.method, url, {\n          headers,\n          body: opts.body,\n          observe: 'response',\n        })\n        .subscribe(\n          resp => {\n            transferState.set(transferStateKey, JSON.stringify(resp));\n            resolve({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers,\n            });\n          },\n          resp =>\n            reject({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers,\n            })\n        );\n    });\n  };\n\n  return client;\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\n// Transforms url query to SearchParameters\nexport function parseServerRequest(req: { url: string } | void) {\n  if (req && req.url && req.url.includes('?')) {\n    const query = req.url.split('?')[1];\n    return AlgoliaSearchHelper.getConfigurationFromQueryString(query);\n  }\n\n  return {};\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\nimport { NgAisNumericSelectorModule } from './numeric-selector/numeric-selector.module';\nexport { NgAisNumericSelectorModule };\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\n\n// Custom SSR algoliasearchClient\nimport {\n  createSSRAlgoliaClient,\n  createSSRSearchClient,\n} from './create-ssr-algolia-client';\nexport { createSSRAlgoliaClient, createSSRSearchClient };\n\nimport { parseServerRequest } from './parse-server-request';\nexport { parseServerRequest };\n\n// Custom widget with BaseWidget class\nimport { BaseWidget, Widget, Connector } from './base-widget';\nexport { BaseWidget, Widget, Connector };\n\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisInstantSearch };\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericSelectorModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgAisRootModule };\n  }\n}\n"],"names":["algoliasearchProxy.default","tslib_1.__extends","noUiSlider.create","algoliasearch","algoliasearchProxy","encodeProxy.default"],"mappings":"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"}
