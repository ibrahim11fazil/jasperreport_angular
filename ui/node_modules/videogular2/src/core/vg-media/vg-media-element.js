"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var VgMediaElement = /** @class */ (function () {
    function VgMediaElement() {
    }
    Object.defineProperty(VgMediaElement.prototype, "audioTracks", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    ;
    VgMediaElement.prototype.addTextTrack = function (kind, label, language) {
        return null;
    };
    VgMediaElement.prototype.canPlayType = function (type) {
        return null;
    };
    VgMediaElement.prototype.load = function () {
    };
    VgMediaElement.prototype.msClearEffects = function () {
    };
    VgMediaElement.prototype.msGetAsCastingSource = function () {
        return null;
    };
    VgMediaElement.prototype.msInsertAudioEffect = function (activatableClassId, effectRequired, config) {
    };
    VgMediaElement.prototype.msSetMediaKeys = function (mediaKeys) {
    };
    VgMediaElement.prototype.msSetMediaProtectionManager = function (mediaProtectionManager) {
    };
    VgMediaElement.prototype.pause = function () {
    };
    VgMediaElement.prototype.play = function () {
        return null;
    };
    VgMediaElement.prototype.setMediaKeys = function (mediaKeys) {
        return null;
    };
    VgMediaElement.prototype.addEventListener = function (type, listener, useCapture) {
    };
    return VgMediaElement;
}());
exports.VgMediaElement = VgMediaElement;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbWVkaWEtZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInZnLW1lZGlhLWVsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUFBO0lBNEZBLENBQUM7SUF6Rkcsc0JBQUksdUNBQVc7YUFBZixjQUFvQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFBQSxDQUFDO0lBaURuRCxxQ0FBWSxHQUFaLFVBQWEsSUFBWSxFQUFFLEtBQWMsRUFBRSxRQUFpQjtRQUN4RCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxvQ0FBVyxHQUFYLFVBQVksSUFBWTtRQUNwQixNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCw2QkFBSSxHQUFKO0lBQ0EsQ0FBQztJQUVELHVDQUFjLEdBQWQ7SUFDQSxDQUFDO0lBRUQsNkNBQW9CLEdBQXBCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsNENBQW1CLEdBQW5CLFVBQW9CLGtCQUEwQixFQUFFLGNBQXVCLEVBQUUsTUFBWTtJQUNyRixDQUFDO0lBRUQsdUNBQWMsR0FBZCxVQUFlLFNBQXNCO0lBQ3JDLENBQUM7SUFFRCxvREFBMkIsR0FBM0IsVUFBNEIsc0JBQTRCO0lBQ3hELENBQUM7SUFFRCw4QkFBSyxHQUFMO0lBQ0EsQ0FBQztJQUVELDZCQUFJLEdBQUo7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxxQ0FBWSxHQUFaLFVBQWEsU0FBMEI7UUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQseUNBQWdCLEdBQWhCLFVBQWlCLElBQVksRUFBRSxRQUE0QyxFQUFFLFVBQW9CO0lBQ2pHLENBQUM7SUFDTCxxQkFBQztBQUFELENBQUMsQUE1RkQsSUE0RkM7QUE1Rlksd0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTWVkaWFFbGVtZW50IH0gZnJvbSAnLi9pLW1lZGlhLWVsZW1lbnQnO1xuXG5leHBvcnQgY2xhc3MgVmdNZWRpYUVsZW1lbnQgaW1wbGVtZW50cyBJTWVkaWFFbGVtZW50IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGVsZW06IGFueTtcbiAgICBnZXQgYXVkaW9UcmFja3MoKTogQXVkaW9UcmFja0xpc3QgeyByZXR1cm4gbnVsbDsgfTtcbiAgICBhdXRvcGxheTogYm9vbGVhbjtcbiAgICBidWZmZXJlZDogVGltZVJhbmdlcztcbiAgICBjb250cm9sczogYm9vbGVhbjtcbiAgICBjcm9zc09yaWdpbjogc3RyaW5nIHwgYW55O1xuICAgIGN1cnJlbnRTcmM6IHN0cmluZztcbiAgICBjdXJyZW50VGltZTogbnVtYmVyO1xuICAgIGRlZmF1bHRNdXRlZDogYm9vbGVhbjtcbiAgICBkZWZhdWx0UGxheWJhY2tSYXRlOiBudW1iZXI7XG4gICAgZHVyYXRpb246IG51bWJlcjtcbiAgICBlbmRlZDogYm9vbGVhbjtcbiAgICBlcnJvcjogTWVkaWFFcnJvcjtcbiAgICBsb29wOiBib29sZWFuO1xuICAgIG1lZGlhS2V5czogTWVkaWFLZXlzIHwgYW55O1xuICAgIG1zQXVkaW9DYXRlZ29yeTogc3RyaW5nO1xuICAgIG1zQXVkaW9EZXZpY2VUeXBlOiBzdHJpbmc7XG4gICAgbXNHcmFwaGljc1RydXN0U3RhdHVzOiBNU0dyYXBoaWNzVHJ1c3Q7XG4gICAgbXNLZXlzOiBNU01lZGlhS2V5cztcbiAgICBtc1BsYXlUb0Rpc2FibGVkOiBib29sZWFuO1xuICAgIG1zUGxheVRvUHJlZmVycmVkU291cmNlVXJpOiBzdHJpbmc7XG4gICAgbXNQbGF5VG9QcmltYXJ5OiBib29sZWFuO1xuICAgIG1zUGxheVRvU291cmNlOiBhbnk7XG4gICAgbXNSZWFsVGltZTogYm9vbGVhbjtcbiAgICBtdXRlZDogYm9vbGVhbjtcbiAgICBuZXR3b3JrU3RhdGU6IG51bWJlcjtcbiAgICBvbmVuY3J5cHRlZDogKGV2OiBNZWRpYUVuY3J5cHRlZEV2ZW50KSA9PiBhbnk7XG4gICAgb25tc25lZWRrZXk6IChldjogTVNNZWRpYUtleU5lZWRlZEV2ZW50KSA9PiBhbnk7XG4gICAgcGF1c2VkOiBib29sZWFuO1xuICAgIHBsYXliYWNrUmF0ZTogbnVtYmVyO1xuICAgIHBsYXllZDogVGltZVJhbmdlcztcbiAgICBwcmVsb2FkOiBzdHJpbmc7XG4gICAgcmVhZHlTdGF0ZTogbnVtYmVyO1xuICAgIHNlZWthYmxlOiBUaW1lUmFuZ2VzO1xuICAgIHNlZWtpbmc6IGJvb2xlYW47XG4gICAgc3JjOiBzdHJpbmc7XG4gICAgc3JjT2JqZWN0OiBNZWRpYVN0cmVhbSB8IGFueTtcbiAgICB0ZXh0VHJhY2tzOiBUZXh0VHJhY2tMaXN0O1xuICAgIHZpZGVvVHJhY2tzOiBWaWRlb1RyYWNrTGlzdDtcbiAgICB2b2x1bWU6IG51bWJlcjtcbiAgICBIQVZFX0NVUlJFTlRfREFUQTogbnVtYmVyO1xuICAgIEhBVkVfRU5PVUdIX0RBVEE6IG51bWJlcjtcbiAgICBIQVZFX0ZVVFVSRV9EQVRBOiBudW1iZXI7XG4gICAgSEFWRV9NRVRBREFUQTogbnVtYmVyO1xuICAgIEhBVkVfTk9USElORzogbnVtYmVyO1xuICAgIE5FVFdPUktfRU1QVFk6IG51bWJlcjtcbiAgICBORVRXT1JLX0lETEU6IG51bWJlcjtcbiAgICBORVRXT1JLX0xPQURJTkc6IG51bWJlcjtcbiAgICBORVRXT1JLX05PX1NPVVJDRTogbnVtYmVyO1xuXG4gICAgYWRkVGV4dFRyYWNrKGtpbmQ6IHN0cmluZywgbGFiZWw/OiBzdHJpbmcsIGxhbmd1YWdlPzogc3RyaW5nKTogVGV4dFRyYWNrIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY2FuUGxheVR5cGUodHlwZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgbG9hZCgpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBtc0NsZWFyRWZmZWN0cygpOiB2b2lkIHtcbiAgICB9XG5cbiAgICBtc0dldEFzQ2FzdGluZ1NvdXJjZSgpOiBhbnkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBtc0luc2VydEF1ZGlvRWZmZWN0KGFjdGl2YXRhYmxlQ2xhc3NJZDogc3RyaW5nLCBlZmZlY3RSZXF1aXJlZDogYm9vbGVhbiwgY29uZmlnPzogYW55KTogdm9pZCB7XG4gICAgfVxuXG4gICAgbXNTZXRNZWRpYUtleXMobWVkaWFLZXlzOiBNU01lZGlhS2V5cyk6IHZvaWQge1xuICAgIH1cblxuICAgIG1zU2V0TWVkaWFQcm90ZWN0aW9uTWFuYWdlcihtZWRpYVByb3RlY3Rpb25NYW5hZ2VyPzogYW55KTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGF1c2UoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgcGxheSgpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzZXRNZWRpYUtleXMobWVkaWFLZXlzOiBNZWRpYUtleXMgfCBhbnkpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlOiBzdHJpbmcsIGxpc3RlbmVyOiBFdmVudExpc3RlbmVyT3JFdmVudExpc3RlbmVyT2JqZWN0LCB1c2VDYXB0dXJlPzogYm9vbGVhbik6IHZvaWQge1xuICAgIH1cbn1cbiJdfQ==