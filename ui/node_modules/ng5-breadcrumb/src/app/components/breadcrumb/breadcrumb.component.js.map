{"version":3,"file":"breadcrumb.component.js","sourceRoot":"","sources":["../../../../../src/app/components/breadcrumb/breadcrumb.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAoB,MAAM,eAAe,CAAC;AAClE,OAAO,EAAC,MAAM,EAAE,aAAa,EAAC,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAC,iBAAiB,EAAC,MAAM,sBAAsB,CAAC;;;;;;IA0BnD,6BACY,MAAc,EACd,iBAAoC;QADpC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;4BARf,IAAI;sBACJ,EAAE;KAQ/B;IAEJ,sCAAQ,GAAR;QAAA,iBAcC;QAbG,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,aAA2B;YAEjF,EAAE,CAAC,CAAC,aAAa,YAAY,aAAa,CAAC,CAAC,CAAC;gBACxC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBACtB,KAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,iBAAiB,GAAG,aAAa,CAAC,iBAAiB,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;aACvH;SACJ,CAAC,CAAC;KACN;IAED,yCAAW,GAAX,UAAY,OAAY;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,MAAM,CAAC;SACV;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACjD;IAED,qDAAuB,GAAvB,UAAwB,GAAW;QAC/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;YAE7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC3B;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACrE;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;KACJ;IAED,wCAAU,GAAV,UAAW,GAAW;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KAClC;IAED,0CAAY,GAAZ,UAAa,GAAW;QACpB,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;KAC1E;IAED,yCAAW,GAAX;QACI,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;KAC1C;;gBAzEJ,SAAS,SAAC;oBACP,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,6nBAST;iBACJ;;;;gBAnBO,MAAM;gBACN,iBAAiB;;;iCAoBpB,KAAK;2BACL,KAAK;;8BAvBV;;SAqBa,mBAAmB","sourcesContent":["import {Component, Input, OnInit, OnChanges} from '@angular/core';\nimport {Router, NavigationEnd} from '@angular/router';\nimport {BreadcrumbService} from './breadcrumb.service';\n\n/**\n * This component shows a breadcrumb trail for available routes the router can navigate to.\n * It subscribes to the router in order to update the breadcrumb trail as you navigate to a component.\n */\n@Component({\n    selector: 'breadcrumb',\n    template: `\n        <ul [class.breadcrumb]=\"useBootstrap\">\n            <li *ngFor=\"let url of _urls; let last = last\" [ngClass]=\"{'breadcrumb-item': useBootstrap, 'active': last}\"> <!-- disable link of last item -->\n                <a role=\"button\" *ngIf=\"!last && url == prefix\" (click)=\"navigateTo('/')\">{{url}}</a>\n                <a role=\"button\" *ngIf=\"!last && url != prefix\" (click)=\"navigateTo(url)\">{{friendlyName(url)}}</a>\n                <span *ngIf=\"last\">{{friendlyName(url)}}</span>\n                <span *ngIf=\"last && url == prefix\">{{friendlyName('/')}}</span>\n            </li>\n        </ul>\n    `\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n    @Input() useBootstrap: boolean = true;\n    @Input() prefix:       string  = '';\n\n    public _urls: string[];\n    public _routerSubscription: any;\n\n    constructor(\n        private router: Router,\n        private breadcrumbService: BreadcrumbService\n    ) {}\n\n    ngOnInit(): void {\n        this._urls = new Array();\n\n        if (this.prefix.length > 0) {\n            this._urls.unshift(this.prefix);\n        }\n\n        this._routerSubscription = this.router.events.subscribe((navigationEnd:NavigationEnd) => {\n\n           if (navigationEnd instanceof NavigationEnd) {\n                this._urls.length = 0; //Fastest way to clear out array\n                this.generateBreadcrumbTrail(navigationEnd.urlAfterRedirects ? navigationEnd.urlAfterRedirects : navigationEnd.url);\n            }\n        });\n    }\n\n    ngOnChanges(changes: any): void {\n        if (!this._urls) {\n            return;\n        }\n\n        this._urls.length = 0;\n        this.generateBreadcrumbTrail(this.router.url);\n    }\n\n    generateBreadcrumbTrail(url: string): void {\n        if (!this.breadcrumbService.isRouteHidden(url)) {\n            //Add url to beginning of array (since the url is being recursively broken down from full url to its parent)\n            this._urls.unshift(url);\n        }\n\n        if (url.lastIndexOf('/') > 0) {\n            this.generateBreadcrumbTrail(url.substr(0, url.lastIndexOf('/'))); //Find last '/' and add everything before it as a parent route\n        } else if (this.prefix.length > 0) {\n            this._urls.unshift(this.prefix);\n        }\n    }\n\n    navigateTo(url: string): void {\n        this.router.navigateByUrl(url);\n    }\n\n    friendlyName(url: string): string {\n        return !url ? '' : this.breadcrumbService.getFriendlyNameForRoute(url);\n    }\n\n    ngOnDestroy(): void {\n        this._routerSubscription.unsubscribe();\n    }\n\n}\n"]}