{"version":3,"sources":["webpack:///./src/app/user-management/user-grid-list/user-grid-list.component.html","webpack:///./src/app/user-management/user-grid-list/user-grid-list.component.scss","webpack:///./src/app/user-management/user-grid-list/user-grid-list.component.ts","webpack:///./src/app/user-management/user-manage-list/user-manage-list.component.html","webpack:///./src/app/user-management/user-manage-list/user-manage-list.component.scss","webpack:///./src/app/user-management/user-manage-list/user-manage-list.component.ts","webpack:///./src/app/user-management/user-management.module.ts","webpack:///./src/app/user-management/user-management.routing.ts"],"names":[],"mappings":"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","file":"user-management-user-management-module.js","sourcesContent":["module.exports = \"<div class=\\\"user-grid-list-wrap\\\">\\n\\t<div fxLayout=\\\"row wrap\\\">\\n\\t\\t<div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.33\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" *ngFor = \\\"let gridlist of userGridList\\\">\\n\\t\\t\\t<mat-card class=\\\"grid-list-card mat-pad-none\\\">\\t\\n\\t\\t\\t\\t<div class=\\\"grid-image\\\">\\n\\t\\t\\t\\t \\t<img class=\\\"#\\\" src=\\\"{{gridlist.backgroundImage}}\\\" height=\\\"450\\\" width=\\\"700\\\">\\n\\t\\t\\t\\t \\t<div class=\\\"img-overlay\\\" fxLayoutAlign=\\\"end start\\\">\\n                  <div class=\\\"social-icon-wrapper warn-bg\\\">\\n                     <a href=\\\"\\\" class=\\\"icon facebook\\\">\\n                     \\t<mat-icon class=\\\"fa fa-facebook\\\"></mat-icon>\\n                     </a>\\n                  \\t<a href=\\\"\\\" class=\\\"icon google\\\">\\n                  \\t\\t<mat-icon class=\\\"fa fa-google\\\"></mat-icon>\\n                  \\t</a>\\n                  \\t<a href=\\\"\\\" class=\\\"icon twitter\\\">\\n                  \\t\\t<mat-icon class=\\\"fa fa-twitter\\\"></mat-icon>\\n                  \\t</a>\\n                  \\t<a href=\\\"\\\" class=\\\"icon twitter\\\">\\n                  \\t\\t<mat-icon class=\\\"fa fa-github-alt\\\"></mat-icon>\\n                  \\t</a>\\n                  </div>\\n               </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"pad-x-sm pad-b-sm\\\"> \\t\\n\\t\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mrgn-b-md pad-l-sm\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"img-thumbnail mrgn-r-sm mrgn-b-sm\\\">\\n\\t                     <img class=\\\"img-circle\\\" src=\\\"{{gridlist.image}}\\\" height=\\\"50\\\" width=\\\"50\\\">\\n\\t                  </div>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"margin-none\\\">{{gridlist.name}}</h5>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"mat-text-muted gene-text-md\\\" fxLayoutAlign=\\\"start center\\\"><mat-icon>location_on</mat-icon>{{gridlist.location}}</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t<div class=\\\"add-user-btn\\\">\\n\\t\\t               <mat-card-actions class=\\\"mat-pad-none mrgn-b-sm\\\">\\n\\t\\t                  <button mat-raised-button color=\\\"{{gridlist.buttonColor}}\\\">SEND MESSAGE <mat-icon class=\\\"mrgn-l-sm\\\">send</mat-icon></button>\\n\\t\\t               </mat-card-actions>\\n\\t         \\t\\t</div>\\n\\t         \\t\\t<span class=\\\"mat-text-{{gridlist.colorClass}}\\\" fxLayoutAlign=\\\"start center\\\">\\n\\t         \\t\\t\\t<mat-icon>{{gridlist.icon}}</mat-icon><small>Availabel For Hire</small>\\n\\t         \\t\\t</span>\\n\\t\\t\\t\\t\\t</mat-card-content>\\t\\n\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbWFuYWdlbWVudC91c2VyLWdyaWQtbGlzdC91c2VyLWdyaWQtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\n\n@Component({\n  selector: 'ms-user-grid-list',\n  templateUrl: './user-grid-list.component.html',\n  styleUrls: ['./user-grid-list.component.scss']\n})\nexport class UserGridListComponent implements OnInit {\n\n\tuserGridList : any [] = [\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-1.jpg\",\n\t\t\timage : \"assets/img/user-1.jpg\",\n\t\t\tname : \"Robert See\",\n\t\t\tlocation : \"Durham\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-2.jpg\",\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Alice Perrone\",\n\t\t\tlocation : \"San Diego\",\n\t\t\tcolorClass :\"warn\",\n\t\t\tbuttonColor: \"accent\",\n\t\t\ticon:\"clear\"\n\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-3.jpg\",\n\t\t\timage : \"assets/img/user-3.jpg\",\n\t\t\tname : \"Daniel Bagley\",\n\t\t\tlocation : \"Morden\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-4.jpg\",\n\t\t\timage : \"assets/img/user-4.jpg\",\n\t\t\tname : \"Carolyn Copeland\",\n\t\t\tlocation : \"Hartford\",\n\t\t\tcolorClass :\"warn\",\n\t\t\tbuttonColor: \"accent\",\n\t\t\ticon:\"clear\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-5.jpg\",\n\t\t\timage : \"assets/img/user-5.jpg\",\n\t\t\tname : \"Annie Workman\",\n\t\t\tlocation : \"Houston\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-6.jpg\",\n\t\t\timage : \"assets/img/user-6.jpg\",\n\t\t\tname : \"Anna Robertson\",\n\t\t\tlocation : \"Owensboro\",\n\t\t\tcolorClass :\"warn\",\n\t\t\tbuttonColor: \"accent\",\n\t\t\ticon:\"clear\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-1.jpg\",\n\t\t\timage : \"assets/img/user-7.jpg\",\n\t\t\tname : \"Priscilla Hughes\",\n\t\t\tlocation : \"Houston\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-2.jpg\",\n\t\t\timage : \"assets/img/user-8.jpg\",\n\t\t\tname : \"Flossie Morrow\",\n\t\t\tlocation : \"Brock\",\n\t\t\tcolorClass :\"warn\",\n\t\t\tbuttonColor: \"accent\",\n\t\t\ticon:\"clear\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-3.jpg\",\n\t\t\timage : \"assets/img/user-9.jpg\",\n\t\t\tname : \"Joseph Prasad\",\n\t\t\tlocation : \"Toronto\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-4.jpg\",\n\t\t\timage : \"assets/img/user-9.jpg\",\n\t\t\tname : \"Ronald Lee\",\n\t\t\tlocation : \"Erin Mills\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-5.jpg\",\n\t\t\timage : \"assets/img/user-10.jpg\",\n\t\t\tname : \"Charles Numbers\",\n\t\t\tlocation : \"Surrey\",\n\t\t\tcolorClass :\"warn\",\n\t\t\tbuttonColor: \"accent\",\n\t\t\ticon:\"clear\"\n\t\t},\n\t\t{\n\t\t\tbackgroundImage:\"assets/img/gridlist-6.jpg\",\n\t\t\timage : \"assets/img/user-11.jpg\",\n\t\t\tname : \"Ron Mingo\",\n\t\t\tlocation : \"Montreal\",\n\t\t\tcolorClass :\"primary\",\n\t\t\tbuttonColor: \"primary\",\n\t\t\ticon:\"done\"\n\t\t}\n\t]\n\n\tconstructor(private pageTItleService : PageTitleService) { }\n\n\tngOnInit() {\n\t\tthis.pageTItleService.setTitle(\"User Grid List\")\n\t}\n\n}\n","module.exports = \"<div class=\\\"user-manage-list\\\">\\n   <mat-card>\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\">\\n         <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <div class=\\\"mrgn-r-sm\\\">\\n               <mat-icon class=\\\"mat-icon-grey cursor-pointer\\\">loop</mat-icon>\\n            </div>\\n            <div class=\\\"mrgn-l-sm mrgn-r-sm\\\">\\n               <mat-form-field>\\n                  <mat-select placeholder=\\\"More\\\">\\n                     <mat-option value=\\\"All\\\">All</mat-option>\\n                     <mat-option value=\\\"Remove\\\">Remove</mat-option>\\n                     <mat-option value=\\\"Edit\\\">Edit</mat-option>\\n                     <mat-option value=\\\"Recently\\\">Recently</mat-option>\\n                  </mat-select>\\n               </mat-form-field>\\n            </div>\\n         </div>   \\n         <div class=\\\"mrgn-l-md mrgn-b-md add-user-btn\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-card-actions class=\\\"mat-pad-none margin-none\\\">\\n               <button mat-raised-button mat-button-sm color=\\\"primary\\\" (click)=\\\"addNewUserDialog()\\\">ADD NEW USER<mat-icon class=\\\"mrgn-l-md gene-text-xl\\\">add</mat-icon></button>\\n            </mat-card-actions>\\n         </div>\\n      </div>\\n      <mat-divider></mat-divider>       \\n      <div class=\\\"table-responsive\\\">  \\n         <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"dataSource\\\">\\n            <ng-container matColumnDef=\\\"select\\\">\\n               <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                     [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                     [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                  </mat-checkbox>\\n               </th>\\n               <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                     (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                     [checked]=\\\"selection.isSelected(row)\\\">\\n                  </mat-checkbox>\\n               </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"user\\\">\\n               <th mat-header-cell *matHeaderCellDef>User</th>\\n               <td mat-cell *matCellDef=\\\"let element\\\">\\n                  <div fxLayoutAlign=\\\"start center\\\">\\n                     <div class=\\\"mrgn-r-sm user-list-image\\\">\\n                        <img class=\\\"img-circle\\\" src=\\\"{{element.img}}\\\" height=\\\"50\\\" width=\\\"50\\\">\\n                     </div>\\n                     <div>   \\n                        <h5 class=\\\"mrgn-b-xs\\\">{{element.firstName}} {{element.lastName}}</h5>\\n                        <div *ngIf=\\\"element.isNewUser\\\">\\n                        <mat-chip-list>\\n                           <mat-chip color=\\\"primary\\\" selected>{{element.isNewUser}}</mat-chip>\\n                        </mat-chip-list>\\n                        </div>\\n                     </div>   \\n                  </div>\\n               </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"emailAddress\\\">\\n               <th mat-header-cell *matHeaderCellDef>Email Address</th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"><div class=\\\"make-ellipse\\\">{{element.emailAddress}} </div></td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"status\\\">\\n               <th mat-header-cell *matHeaderCellDef>Status</th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> \\n                  <div fxLayoutAlign=\\\"start start\\\">\\n                     <div class=\\\"rounded mrgn-r-xs primary-bg status-icon\\\"></div>\\n                     <div class=\\\"status-text\\\">\\n                        <div>{{element.status}}</div>\\n                        <div class=\\\"mat-text-muted\\\">{{element.statusTime}}</div>\\n                     </div>\\n                  </div>\\n               </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"accountType\\\">\\n               <th mat-header-cell *matHeaderCellDef>Account Type</th>\\n               <td mat-cell *matCellDef=\\\"let element\\\">\\n                  <mat-chip-list>\\n                     <mat-chip color=\\\"{{element.accountTypeColor}}\\\" selected> {{element.accountType}}</mat-chip>\\n                  </mat-chip-list> \\n               </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"dateCreated\\\">\\n               <th mat-header-cell *matHeaderCellDef>Date Created</th>\\n               <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateCreated | date:'mediumDate'}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"action\\\">\\n               <th mat-header-cell *matHeaderCellDef>Action</th>\\n               <td mat-cell *matCellDef=\\\"let element;let i = index;\\\">\\n                  <button mat-icon-button>\\n                     <mat-icon class=\\\"mat-icon-grey gene-text-lg\\\" (click)=\\\"onEdit(element, i)\\\">edit</mat-icon>\\n                  </button>\\n                   <button mat-icon-button>\\n                     <mat-icon class=\\\"mat-icon-grey gene-text-lg\\\">remove_red_eye</mat-icon>\\n                  </button>\\n                   <button mat-icon-button (click)=\\\"onDelete(i)\\\">\\n                     <mat-icon class=\\\"mat-icon-grey gene-text-lg\\\">delete</mat-icon>\\n                  </button>\\n               </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n               (click)=\\\"selection.toggle(row)\\\"></tr>\\n         </table>\\n      </div>   \\n      <div class=\\\"pagination\\\">\\n         <mat-paginator [length]=\\\"usermanagelist.length\\\"\\n           [pageSize]=\\\"10\\\"\\n           [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n         </mat-paginator>\\n      </div>\\n   </mat-card>\\n</div>   \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbWFuYWdlbWVudC91c2VyLW1hbmFnZS1saXN0L3VzZXItbWFuYWdlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTableDataSource, MatPaginator} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { CoreService } from '../../service/core/core.service';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\n\n@Component({\n  selector: 'ms-user-manage-list',\n  templateUrl: './user-manage-list.component.html',\n  styleUrls: ['./user-manage-list.component.scss']\n})\nexport class UserManageListComponent implements OnInit {\n   \n   @ViewChild(MatPaginator) paginator : MatPaginator;\n   popUpNewUserResponse               : any;\n   popUpEditUserResponse              : any;\n   popUpDeleteUserResponse            : any;\n\n   color = {\n      \"Platinum\" : \"primary\",\n      \"Gold\"     : \"accent\",\n      \"Silver\"   : \"warn\"\n   }\n\n\tusermanagelist : any [] = [\n      {\n      \timg:\"assets/img/user-1.jpg\",\n      \tfirstName : \"Steven\",\n         lastName : \"Gonzalez\",\n      \tisNewUser:\"New\",\n       \temailAddress: \"StevenAGonzalez@dayrep.com\",\n        \tstatus: \"Active\",\n         statusTime:\"Since 1 hour\",  \n         accountTypeColor:\"primary\",\n         accountType: \"Platinum\",\n         dateCreated: \"13 Aug 2018\"\n      },\n      {\n      \timg:\"assets/img/user-2.jpg\",\n         firstName : \"Josephine\",\n         lastName : \"Goodman\",\n         isNewUser:\"New\",\n      \temailAddress: \"JosephineKGoodman@jourrapide.com\",\n      \tstatus: \"Inactive\",\n         statusTime:\"Since 30 min\",\n         accountType: \"Gold\",\n         accountTypeColor:\"accent\",\n         dateCreated: \"22 Aug 2018\"\n     \t},\n      {\n\t\t\timg:\"assets/img/user-3.jpg\",\n         firstName : \"Mario\",\n         lastName : \"Harmon\",\n\t\t\temailAddress: \"MarioCHarmon@armyspy.com\",\n\t\t\tstatus: \"Active\",\n         statusTime:\"Since 2 hour\",\n\t\t\taccountType: \"Silver\",\n         accountTypeColor:\"warn\",\n\t\t\tdateCreated: \"13 Aug 2018\"\n      },\n      {\n\t\t\timg:\"assets/img/user-4.jpg\",\n         firstName : \"Aleta\",\n         lastName : \"Goodell\",\n\t\t\temailAddress: \"AletaDGoodell@teleworm.us\",\n\t\t\tstatus: \"Inactive\",\n         statusTime:\"Since 24 min\",\n\t\t\taccountType: \"Platinum\",\n         accountTypeColor:\"primary\",\n\t\t\tdateCreated: \"22 Aug 2018\",\n      },\n      {\n\t\t\timg:\"assets/img/user-5.jpg\",\n         firstName : \"Florence\",\n         lastName : \"Smith\",\n\t\t\temailAddress: \"FlorenceJSmith@rhyta.com\",\n\t\t\tstatus: \"Active\",\n         statusTime:\"Since 10 hour\",\n         accountType:\"Gold\",\n         accountTypeColor:\"accent\",\n\t\t\tdateCreated: \"13 Aug 2018\"\n      },\n      {\n\t\t\timg:\"assets/img/user-6.jpg\",\n         firstName : \"Helen\",\n         lastName : \"Moronta\",\n\t\t\temailAddress: \"HelenLMoronta@teleworm.us\",\n\t\t\tstatus: \"Inactive\",\n         statusTime:\"Since 5 hour\",\n         accountType: \"Silver\",\n         accountTypeColor:\"warn\",\n\t\t\tdateCreated: \"22 Aug 2018\"\n      },\n      {\n\t\t\timg:\"assets/img/user-7.jpg\",\n         firstName : \"Leanora\",\n         lastName : \"Reed\",\n\t\t\temailAddress: \"LeanoraTReed@rhyta.com\",\n\t\t\tstatus: \"Active\",\n         statusTime:\"Since 10 min\",\n\t\t\taccountType: \"Platinum\",\n         accountTypeColor:\"primary\",\n\t\t\tdateCreated: \"13 Aug 2018\",\n      },\n      {\n\t\t\timg:\"assets/img/user-8.jpg\",\n         firstName : \"Judy\",\n         lastName : \"Gallardo\",\n\t\t\temailAddress: \"JudyPGallardo@dayrep.com\",\n\t\t\tstatus: \"Inactive\",\n         statusTime:\"Since 4 hour\",\n         accountType: \"Gold\", \n         accountTypeColor:\"accent\", \n\t\t\tdateCreated: \"22 Aug 2018\"\n      },\n      {\n\t\t\timg:\"assets/img/user-9.jpg\",\n         firstName : \"Goldie\",\n         lastName : \"Carlson\",\n\t\t\temailAddress: \"GoldieJCarlson@teleworm.us\", \n\t\t\tstatus: \"Active\",\n         statusTime:\"Since 9 hour\",\n         accountType: \"Silver\",\n         accountTypeColor:\"warn\",\n\t\t\tdateCreated: \"13 Aug 2018\"\n      },\n      {\n\t\t\timg:\"assets/img/user-3.jpg\",\n         firstName : \"Bradley\",\n         lastName : \"Bannon\",\n\t\t\temailAddress: \"BradleyDBannon@teleworm.us\",\n\t\t\tstatus: \"Inactive\",\n         statusTime:\"Since 5 min\",\n\t\t\taccountType: \"Platinum\",\n         accountTypeColor:\"primary\",\n\t\t\tdateCreated: \"22 Aug 2018\"\n      }\n   ];\n\n   displayedColumns : string [] = ['select','user','emailAddress','status','accountType','dateCreated','action'];\n   dataSource = new MatTableDataSource<any>(this.usermanagelist);\n   selection = new SelectionModel<any>(true, []);\n\n   constructor ( private coreService : CoreService,\n                 private pageTitleService : PageTitleService ) { }\n\n   ngOnInit () { \n      this.pageTitleService.setTitle(\"User Management\")\n      this.dataSource.paginator = this.paginator;\n   }\n\n   /** \n     * Whether the number of selected elements matches the total number of rows. \n     */\n   isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n   }\n\n   /**\n     * Selects all rows if they are not all selected; otherwise clear selection. \n     */  \n   masterToggle() {\n      this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n   }\n\n   /** \n     * addNewUserDialog method is used to open a add new user dialog.\n     */   \n   addNewUserDialog() {\n      this.coreService.addNewUserDailog().\n         subscribe( res => {this.popUpNewUserResponse = res},\n                    err => console.log(err),\n                    ()  => this.getAddUserPopupResponse(this.popUpNewUserResponse))\n   }\n\n   /**\n     *getAddUserPopupResponse method is used to get a new user dialog response.\n     *if response will be get then add new user into user list.\n     */\n   getAddUserPopupResponse(response: any){\n      if(response){\n         console.log(response)\n         let addUser = {\n            img : \"assets/img/user-4.jpg\",\n            firstName : response.firstName,\n            lastName : response.lastName,\n            emailAddress : response.emailAddress,\n            accountType : response.accountType,\n            status : \"Active\",\n            statusTime:\"Since 1 hour\",\n            dateCreated : new Date(),\n            accountTypeColor : this.color[response.accountType]\n         }\n         this.usermanagelist.push(addUser);     \n      }\n   }\n\n   /** \n     *onDelete method is used to open a delete dialog.\n     */\n   onDelete(i){\n      this.coreService.deleteDialog(\"Are you sure you want to delete this user permanently?\").\n         subscribe( res => {this.popUpDeleteUserResponse = res},\n                    err => console.log(err),\n                    ()  => this.getDeleteResponse(this.popUpDeleteUserResponse,i))\n   }\n\n   /**\n     * getDeleteResponse method is used to delete a user from the user list.\n     */\n   getDeleteResponse(response : string,i){\n      if(response == \"yes\"){\n         this.dataSource.data.splice(i,1);\n         this.dataSource = new MatTableDataSource(this.dataSource.data);\n      }\n   }\n\n   /**\n     * onEdit method is used to open a edit dialog.\n     */\n   onEdit(data, index){\n      this.coreService.editList(data).\n         subscribe( res => {this.popUpEditUserResponse = res},\n                    err => console.log(err),\n                    ()  => this.getEditResponse(this.popUpEditUserResponse, data, index))\n   }\n\n   /**\n     * getEditResponse method is used to edit a user data. \n     */\n   getEditResponse(response : any , data, i){\n      if(response) {\n         this.usermanagelist[i].firstName = response.firstName,  \n         this.usermanagelist[i].lastName = response.lastName,\n         this.usermanagelist[i].emailAddress = response.emailAddress,\n         this.usermanagelist[i].accountType = response.accountType,\n         this.usermanagelist[i].accountTypeColor = this.color[response.accountType]\n\n      }\n   }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule,\n\t\t\tMatFormFieldModule,\n\t\t\tMatCardModule,\n\t\t\tMatButtonModule,\n\t\t\tMatIconModule,\n\t\t\tMatPaginatorModule,\n\t\t\tMatDividerModule,\n\t\t\tMatCheckboxModule,\n\t\t\tMatTableModule,\n\t\t\tMatTabsModule,\n\t\t\tMatChipsModule,\n\t\t\tMatSortModule,\n\t\t\tMatSelectModule } from '@angular/material';\nimport { UserManagementRoutes } from './user-management.routing';\nimport { UserManageListComponent } from './user-manage-list/user-manage-list.component';\nimport { UserGridListComponent } from './user-grid-list/user-grid-list.component'\nimport { WidgetComponentModule } from '../widget-component/widget-component.module';\n\n@NgModule({\n\tdeclarations: [ \n\t\tUserManageListComponent,\n\t\tUserGridListComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFlexLayoutModule,\n\t\tRouterModule.forChild(UserManagementRoutes),\n\t\tMatInputModule,\n\t\tMatFormFieldModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatPaginatorModule,\n\t\tMatDividerModule,\n\t\tMatCheckboxModule,\n\t\tMatTableModule,\n\t\tMatTabsModule,\n\t\tMatChipsModule,\n\t\tMatSelectModule,\n\t\tWidgetComponentModule,\n\t\tMatSortModule\n\t]\n})\nexport class UserManagementModule { }\n","import { Routes } from '@angular/router';\n\nimport { UserManageListComponent } from './user-manage-list/user-manage-list.component';\nimport { UserGridListComponent } from './user-grid-list/user-grid-list.component';\n\nexport const UserManagementRoutes: Routes = [\n   {\n      path: '',\n      redirectTo: 'usermanagelist',\n      pathMatch: 'full'\n   },\n   {\n      path: '',\n      children: [\n         {\n            path: 'usermanagelist',\n            component:  UserManageListComponent\n         },\n         {\n            path: 'usergridlist',\n            component:  UserGridListComponent\n         }\n      ]\n   }\n];\n"],"sourceRoot":""}