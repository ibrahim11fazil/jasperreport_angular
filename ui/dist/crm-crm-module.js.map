{"version":3,"sources":["webpack:///./src/app/crm/clients/clients.component.html","webpack:///./src/app/crm/clients/clients.component.scss","webpack:///./src/app/crm/clients/clients.component.ts","webpack:///./src/app/crm/crm.module.ts","webpack:///./src/app/crm/crm.routing.ts","webpack:///./src/app/crm/project-detail/project-detail.component.html","webpack:///./src/app/crm/project-detail/project-detail.component.scss","webpack:///./src/app/crm/project-detail/project-detail.component.ts","webpack:///./src/app/crm/projects/projects.component.html","webpack:///./src/app/crm/projects/projects.component.scss","webpack:///./src/app/crm/projects/projects.component.ts","webpack:///./src/app/crm/reports/reports.component.html","webpack:///./src/app/crm/reports/reports.component.scss","webpack:///./src/app/crm/reports/reports.component.ts"],"names":[],"mappings":"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","file":"crm-crm-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\">\\n   <mat-card class=\\\"pad-y-lg mrgn-b-md\\\">\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n         <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"30\\\" fxFlex.lg=\\\"30\\\" fxFlex.xl=\\\"30\\\">\\n            <div class=\\\"pad-r-md\\\">\\n               <h2>{{'Search' | translate}}</h2>\\n            </div>\\n         </div>\\n         <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"70\\\" fxFlex.lg=\\\"70\\\" fxFlex.xl=\\\"70\\\">\\n            <div fxLayout=\\\"row wrap\\\">\\n               <div class=\\\"form-group pad-r-md\\\" fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"calc(100% - 200px)\\\" fxFlex.lg=\\\"calc(100% - 200px)\\\" fxFlex.xl=\\\"calc(100% - 200px)\\\">\\n                  <mat-form-field class=\\\"full-wid\\\" floatLabel=\\\"never\\\">\\n                     <input matInput placeholder=\\\"Search Projects\\\">\\n                  </mat-form-field>\\n               </div>\\n               <div class=\\\"contact-btn\\\" fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"200px\\\" fxFlex.lg=\\\"200px\\\" fxFlex.xl=\\\"200px\\\"> \\n                  <button class=\\\"mrgn-r-sm mrgn-b-sm\\\" mat-raised-button color=\\\"primary\\\">Search</button>\\n                  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addNewClientDialog()\\\">Add<mat-icon class=\\\"mrgn-l-sm\\\">add</mat-icon></button>\\n               </div>\\n            </div>\\n         </div>\\n      </div>\\t\\t\\t\\n   </mat-card>\\t\\n</div>\\n<div class=\\\"contact-wrapper client-wrapper\\\">\\n   <div class=\\\"contact-tab-wrapper\\\">\\n      <div>\\n         <mat-card class=\\\"pad-all-md\\\">\\n            <mat-tab-group color=\\\"accent\\\">\\n               <mat-tab label=\\\"{{'All Client' | translate }}\\\">\\n                  <div class=\\\"gene-card-content pad-b-xs\\\" fxLayout=\\\"row wrap\\\">\\n                     <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.33\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" *ngFor = \\\"let contacts of clientsContent;let i = index\\\">\\n                        <mat-card class=\\\"pad-all-md\\\">\\n                           <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n                              <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                 <div class=\\\"contact-item-info\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n                                    <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                       <div class=\\\"tab-image\\\">\\n                                          <img class=\\\"border-rad-base\\\" alt=\\\"tab image\\\" src=\\\"{{contacts.image}}\\\" width=\\\"95\\\" height=\\\"95\\\">\\n                                       </div>\\n                                    </div>\\t\\n                                    <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                       <h4 class=\\\"margin-none primary-text\\\">{{contacts.name}}</h4>\\n                                       <span class=\\\"contact-links gene-block make-ellipse\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.e_mail}}\\\">{{contacts.e_mail}}</a></span>\\n                                       <span class=\\\"contact-links gene-block\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.phone_number}}\\\">{{contacts.phone_number}}</a> </span>\\n                                       <span class=\\\"gene-block gene-text-md\\\">{{contacts.country}}</span>\\n                                    </div>\\t\\t\\n                                 </div>\\n                              </div>\\n                              <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                 <div class=\\\"icon\\\" fxLayoutAlign=\\\"start start\\\">\\n                                    <button mat-icon-button (click)=\\\"onEdit(contacts,i)\\\"><mat-icon>edit</mat-icon></button>\\n                                    <button mat-icon-button (click)=\\\"onDelete(i)\\\"><mat-icon>delete</mat-icon></button>\\n                                 </div>\\n                              </div>\\n                           </div>\\t\\n                        </mat-card>\\t\\n                     </div>\\t\\n                  </div>\\t\\t\\t\\t\\t\\n               </mat-tab>\\n               <mat-tab label=\\\"{{'Favourite' | translate}}\\\">\\n                  <div class=\\\"gene-card-content pad-b-xs\\\" fxLayout=\\\"row wrap\\\">\\n                     <ng-container *ngFor = \\\"let contacts of clientsContent; let i = index\\\">\\n                        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.33\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" *ngIf=\\\"contacts.tag=='favourite'\\\">\\n                           <mat-card class=\\\"pad-all-md\\\">\\n                              <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n                                 <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                    <div class=\\\"contact-item-info\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n                                       <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                          <div class=\\\"tab-image\\\">\\n                                             <img class=\\\"border-rad-base\\\" alt=\\\"tab image\\\" src=\\\"{{contacts.image}}\\\" width=\\\"95\\\" height=\\\"95\\\">\\n                                          </div>\\n                                       </div>\\t\\n                                       <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                          <h4 class=\\\"margin-none primary-text\\\">{{contacts.name}}</h4>\\n                                          <span class=\\\"contact-links gene-block make-ellipse\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.e_mail}}\\\">{{contacts.e_mail}}</a></span>\\n                                          <span class=\\\"contact-links gene-block\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.phone_number}}\\\">{{contacts.phone_number}}</a> </span>\\n                                          <span class=\\\"gene-block gene-text-md\\\">{{contacts.country}}</span>\\n                                       </div>\\t\\t\\n                                    </div>\\n                                 </div>\\n                                 <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                    <div class=\\\"icon\\\" fxLayoutAlign=\\\"start start\\\">\\n                                       <button mat-icon-button (click)=\\\"onEdit(contacts,i)\\\"><mat-icon>edit</mat-icon></button>\\n                                       <button mat-icon-button (click)=\\\"onDelete(i)\\\"><mat-icon>delete</mat-icon></button>\\n                                    </div>\\n                                 </div>\\n                              </div>\\t\\n                           </mat-card>\\t\\n                        </div>\\n                     </ng-container>\\t\\n                  </div>\\t\\t\\t\\t\\t\\n               </mat-tab>\\n               <mat-tab label=\\\"{{'Recently Added' | translate}}\\\">\\n                  <div class=\\\"gene-card-content pad-b-xs\\\" fxLayout=\\\"row wrap\\\" >\\n                     <ng-container *ngFor = \\\"let contacts of clientsContent; let i = index\\\">\\n                        <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"50\\\" fxFlex.md=\\\"33.33\\\" fxFlex.lg=\\\"25\\\" fxFlex.xl=\\\"25\\\" *ngIf=\\\"contacts.tag=='recently_added'\\\">\\n                           <mat-card class=\\\"pad-all-md\\\">\\n                              <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n                                 <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                    <div class=\\\"contact-item-info\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\n                                       <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                          <div class=\\\"tab-image\\\">\\n                                             <img class=\\\"border-rad-base\\\" alt=\\\"tab image\\\" src=\\\"{{contacts.image}}\\\" width=\\\"95\\\" height=\\\"95\\\">\\n                                          </div>\\n                                       </div>\\t\\n                                       <div class=\\\"pad-all-xs\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\" fxFlex.xl=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                          <h4 class=\\\"margin-none primary-text\\\">{{contacts.name}}</h4>\\n                                          <span class=\\\"contact-links gene-block make-ellipse\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.e_mail}}\\\">{{contacts.e_mail}}</a></span>\\n                                          <span class=\\\"contact-links gene-block\\\"><a class=\\\"gene-text-md\\\" href=\\\"{{contacts.phone_number}}\\\">{{contacts.phone_number}}</a> </span>\\n                                          <span class=\\\"gene-block gene-text-md\\\">{{contacts.country}}</span>\\n                                       </div>\\t\\t\\n                                    </div>\\n                                 </div>\\n                                 <div fxFlex.xl=\\\"100\\\" fxFlex.lg=\\\"100\\\" fxFlex.md=\\\"100\\\"  fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\">\\n                                    <div class=\\\"icon\\\" fxLayoutAlign=\\\"start start\\\">\\n                                       <button mat-icon-button (click)=\\\"onEdit(contacts,i)\\\"><mat-icon>edit</mat-icon></button>\\n                                       <button mat-icon-button (click)=\\\"onDelete(i)\\\"><mat-icon>delete</mat-icon></button>\\n                                    </div>\\n                                 </div>\\n                              </div>\\t\\n                           </mat-card>\\t\\n                        </div>\\t\\n                     </ng-container>      \\n                  </div>\\t\\t\\t\\n               </mat-tab>\\t\\n            </mat-tab-group>\\n         </mat-card>\\n      </div>\\t\\t\\n   </div>\\n</div>\\t\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NybS9jbGllbnRzL2NsaWVudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from '../../service/core/core.service';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'ms-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n\n\tpopUpDeleteResponse    : any;\n\tpopUpNewClientResponse : any;\n\tpopUpEditUserResponse  : any;\n\n\t//client content\n    clientsContent : any [] =[\n\t\t{\n\t\t\timage : \"assets/img/user-1.jpg\",\n\t\t\tname : \"Jerry Ried\",\n\t\t\te_mail : \"JerryBRied@jourrapide.com\",\n\t\t\tphone_number : \"+1 207-589-4752\",\n\t\t\tcountry : \"Liberty\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Gustavo Stevenson\",\n\t\t\te_mail : \"GustavoJStevenson@rhyta.com\",\n\t\t\tphone_number : \"+1 727-709-5505\",\n\t\t\tcountry : \"Tampa\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-3.jpg\",\n\t\t\tname : \"John Shrum\",\n\t\t\te_mail : \"JohnLShrum@jourrapide.com \",\n\t\t\tphone_number : \"+1 650-722-2798\",\n\t\t\tcountry : \"San Francisco\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-4.jpg\",\n\t\t\tname : \"Julie Reno\",\n\t\t\te_mail : \"JulieDReno@dayrep.com\",\n\t\t\tphone_number : \"+1 956-303-4288\",\n\t\t\tcountry : \"Harlingen\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-5.jpg\",\n\t\t\tname : \"Nancy Beck\",\n\t\t\te_mail : \"NancyKBeck@teleworm.us\",\n\t\t\tphone_number : \"+1 423-954-4020\",\n\t\t\tcountry : \"Chattanooga\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-6.jpg\",\n\t\t\tname : \"Travis Klotz\",\n\t\t\te_mail : \"TravisMKlotz@jourrapide.com\",\n\t\t\tphone_number : \"+1 312-405-5954\",\n\t\t\tcountry : \"Hickory Hills\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Anna Estes\",\n\t\t\te_mail : \"AnnaLEstes@armyspy.com\",\n\t\t\tphone_number : \"+1 808-652-9469\",\n\t\t\tcountry : \"Waipahu\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-3.jpg\",\n\t\t\tname : \"David Jones\",\n\t\t\te_mail : \"DavidDJones@jourrapide.com\",\n\t\t\tphone_number : \"+1 407-343-1604\",\n\t\t\tcountry : \"Kissimmee\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-4.jpg\",\n\t\t\tname : \"Hayden Bower\",\n\t\t\te_mail : \"HaydenMBower@armyspy.com\",\n\t\t\tphone_number : \"+1 601-298-5772\",\n\t\t\tcountry : \"Carthage\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-1.jpg\",\n\t\t\tname : \"Cathy Hagood\",\n\t\t\te_mail : \"CathyWHagood@jourrapide.com\",\n\t\t\tphone_number : \"+1 325-660-7801\",\n\t\t\tcountry : \"Abilene\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Anna Estes\",\n\t\t\te_mail : \"AnnaLEstes@armyspy.com\",\n\t\t\tphone_number : \"+1 808-652-9469\",\n\t\t\tcountry : \"Waipahu\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Mary Perez\",\n\t\t\te_mail : \"MaryJPerez@teleworm.us\",\n\t\t\tphone_number : \"+1 626-374-4199\",\n\t\t\tcountry : \"Alhambra\",\n\t\t\ttag : \"recently_added\"\n\t\t},{\n\t\t\timage : \"assets/img/user-1.jpg\",\n\t\t\tname : \"Jerry Ried\",\n\t\t\te_mail : \"JerryBRied@jourrapide.com\",\n\t\t\tphone_number : \"+1 207-589-4752\",\n\t\t\tcountry : \"Liberty\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-2.jpg\",\n\t\t\tname : \"Gustavo Stevenson\",\n\t\t\te_mail : \"GustavoJStevenson@rhyta.com\",\n\t\t\tphone_number : \"+1 727-709-5505\",\n\t\t\tcountry : \"Tampa\",\n\t\t\ttag : \"recently_added\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-3.jpg\",\n\t\t\tname : \"John Shrum\",\n\t\t\te_mail : \"JohnLShrum@jourrapide.com \",\n\t\t\tphone_number : \"+1 650-722-2798\",\n\t\t\tcountry : \"San Francisco\",\n\t\t\ttag : \"favourite\"\n\t\t},\n\t\t{\n\t\t\timage : \"assets/img/user-4.jpg\",\n\t\t\tname : \"Julie Reno\",\n\t\t\te_mail : \"JulieDReno@dayrep.com\",\n\t\t\tphone_number : \"+1 956-303-4288\",\n\t\t\tcountry : \"Harlingen\",\n\t\t\ttag : \"favourite\"\n\t\t}\n   ]\n\n\tconstructor(public coreService : CoreService,\n\t\t\t\tprivate pageTitleService: PageTitleService,\n             private translate : TranslateService) { }\n\n\tngOnInit() {\n\t\tthis.pageTitleService.setTitle(\"Clients\");\n\t}\n\n\t/** \n     *onDelete method is used to open a delete dialog.\n     */\n\tonDelete(i){\n\t\tthis.coreService.deleteDialog(\"Are you sure you want to delete this Client permanently?\").\n\t\t\tsubscribe(res => {this.popUpDeleteResponse = res},\n\t\t\t\t\t\t err => console.log(err),\n\t\t\t\t\t\t ()  => this.getDeleteResponse(this.popUpDeleteResponse,i)\n\t\t\t);\n\t}\n\n\t/**\n     * getDeleteResponse method is used to delete a client from the client list.\n     */\n\tgetDeleteResponse(response, i ) {\n\t\tif(response == 'yes'){\n\t\t\tthis.clientsContent.splice(i,1);\n\t\t}\n\t}\n\n\t/** \n     * addNewClientDialog method is used to open a add new client dialog.\n     */   \n   addNewClientDialog() {\n      this.coreService.addNewClientDialog().\n         subscribe( res => {this.popUpNewClientResponse = res},\n                    err => console.log(err),\n                    ()  => this.getAddClientPopupResponse(this.popUpNewClientResponse))\n   }\n\n   /**\n     *getAddClientPopupResponse method is used to get a new client dialog response.\n     *if response will be get then add new client into client list.\n     */\n   getAddClientPopupResponse(response: any){\n      if(response){\n         let addUser = {\n            image : \"assets/img/user-4.jpg\",\n            name : response.name,\n            e_mail : response.emailAddress,\n            tag : \"recently_added\",\n            country : response.location,\n            phone_number : response.phoneNumber\n         }\n         this.clientsContent.push(addUser);     \n      }\n   }\n\n   /**\n     * onEdit method is used to open a edit dialog.\n     */\n   onEdit(data, index){\n      this.coreService.editClientList(data).\n         subscribe( res => {this.popUpEditUserResponse = res},\n                    err => console.log(err),\n                    ()  => this.getEditResponse(this.popUpEditUserResponse, data, index))\n   }\n\n   /**\n     * getEditResponse method is used to edit a client data. \n     */\n   getEditResponse(response : any , data, i){\n      if(response) {\n         this.clientsContent[i].name = response.name,  \n         this.clientsContent[i].country = response.country,\n         this.clientsContent[i].e_mail = response.e_mail,\n         this.clientsContent[i].phone_number = response.phone_number\n      }\n   }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { PerfectScrollbarModule, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { MatIconModule,\n\t\t\tMatButtonModule,\n\t\t\tMatTabsModule,\n\t\t\tMatCardModule,\n\t\t\tMatMenuModule,\n         MatCheckboxModule,         \n\t\t\tMatTableModule,\n\t\t\tMatDividerModule,\n         MatPaginatorModule,\n\t\t\tMatProgressBarModule,\n         MatInputModule,      \n         MatOptionModule,      \n         MatSelectModule,\n         MatChipsModule,    \n\t\t\tMatExpansionModule,  \n\t\t\tMatFormFieldModule,\n\t\t\tMatListModule} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ChartsModule } from 'ng2-charts';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\n\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { WidgetComponentModule } from '../widget-component/widget-component.module';\nimport { crmRouters } from './crm.routing';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\n@NgModule({\n\tdeclarations: [\n\t\tProjectsComponent, \n\t\tClientsComponent, \n\t\tReportsComponent, ProjectDetailComponent\n\t],\n\timports: [\n\t\tCommonModule,\n      RouterModule.forChild(crmRouters),\n      MatIconModule,\n\t\tMatButtonModule,\n\t\tMatTabsModule,\n      MatCardModule,      \n\t\tMatTableModule,\n\t\tMatMenuModule,\n\t\tMatListModule,\n\t\tChartsModule,\n\t\tMatCheckboxModule,\n      MatDividerModule, \n      MatPaginatorModule,     \n\t\tMatProgressBarModule,\n\t\tMatInputModule,\n      MatFormFieldModule,\n      PerfectScrollbarModule,\n      MatExpansionModule,\n\t\tNgxDatatableModule,\n      FlexLayoutModule,\n      MatChipsModule,         \n      MatOptionModule,\n      MatSelectModule,\n      SlickCarouselModule,\n      TranslateModule,\n      WidgetComponentModule\n\t]\n})\n\nexport class CrmModule { }\n","import { Routes } from '@angular/router';\n\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ClientsComponent } from './clients/clients.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\n\nexport const crmRouters : Routes = [\n\t{\n\t\tpath : '',\n\t\tredirectTo : 'projects',\n\t\tpathMatch : 'full'\n\t},\n\t{\n\t\tpath : '',\n\t\tchildren : [\n\t\t\t{\n\t\t\t\tpath: \"projects\",\n\t\t\t\tcomponent : ProjectsComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"clients\",\n\t\t\t\tcomponent : ClientsComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"reports\",\n\t\t\t\tcomponent : ReportsComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"project-detail\",\n\t\t\t\tcomponent : ProjectDetailComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"project-detail/:id\",\n\t\t\t\tcomponent : ProjectDetailComponent\n\t\t\t}\n\t\t]\n\t}\t\n]","module.exports = \"<ng-container *ngIf=\\\"projectDetails\\\">\\n   <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"height-full\\\">\\n      <div fxFlex.gt-lg=\\\"100\\\" fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"90\\\" fxFlex=\\\"100\\\">\\n         <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"height-full\\\">\\n            <div fxFlex.gt-md=\\\"70\\\" fxFlex.gt-sm=\\\"60\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"pad-x-md pad-b-md\\\">\\n               <div fxLayout=\\\"column\\\">\\n                  <h2>{{projectDetails.name | translate}}</h2>\\n                  <mat-card class=\\\"description-wrap pad-y-md mrgn-x-none mat-card\\\">\\n                     <div class=\\\"gene-sec-title\\\">\\n                        <h3>{{ 'Description' | translate}}</h3>\\n                     </div>\\n                     <div class=\\\"gene-sec-content mrgn\\\">\\n                        <p  class=\\\"font-bold mrgn-b-sm\\\">{{projectDetails.decription_heading}}</p>\\n                        <p >{{projectDetails.description}}</p>\\n                        <ul class=\\\"mrgn-b-none pad-l-md pad-r-none\\\">\\n                           <li *ngFor=\\\"let points of projectDetails.description_points\\\">{{points}}</li>\\n                        </ul>\\n                     </div>\\n                  </mat-card>\\n               </div>\\n               <div fxLayout=\\\"column\\\">\\n                  <mat-card class=\\\"mrgn-x-none\\\">\\n                     <mat-card-title>\\n                        <div class=\\\"sec-title\\\">\\n                           <h3>{{'Files Uploaded' | translate }}</h3>\\n                        </div>\\n                     </mat-card-title>             \\n                     <div class=\\\"content-wrap\\\">\\n                        <mat-list>\\n                           <ng-container *ngFor=\\\"let upload of projectDetails.fileUploads\\\">\\n                              <mat-list-item>\\n                                 <mat-icon mat-list-icon>{{upload.icon}}</mat-icon>\\n                                 <h4 mat-line>{{upload.file}} </h4>\\n                                 <small mat-line>{{upload.date}}</small>\\n                              </mat-list-item>\\n                              <mat-divider></mat-divider>\\n                           </ng-container>\\n                        </mat-list>                            \\n                     </div>\\n                  </mat-card>\\n               </div>\\n               <div fxLayout=\\\"column\\\">\\n                  <mat-card class=\\\"mrgn-x-none\\\">\\n                     <mat-card-title>\\n                        <div class=\\\"sec-title\\\">\\n                           <h3>{{ 'Statistics' | translate }}</h3>\\n                        </div>\\n                     </mat-card-title>             \\n                     <div class=\\\"project-stats-chart\\\">\\n                        <ms-statistics [data]=\\\"projectDetails.chartData\\\" [label]=\\\"projectDetails.chartLabel\\\"></ms-statistics>\\n                     </div>\\n                  </mat-card>\\n               </div>\\n            </div>\\n            <div fxFlex.gt-md=\\\"30\\\" fxFlex.gt-sm=\\\"40\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\" class=\\\"pad-b-xd\\\">                  \\n               <div class=\\\"project-info-wrap\\\">\\n                  <div fxLayout=\\\"column\\\">\\n                     <mat-card>\\n                        <mat-list role=\\\"list\\\">\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{'Budget' | translate}} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.budget}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{'Client' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.client}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{ 'Department' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.department}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{ 'Duration' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.duration}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{ 'Project Manager' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.project_manager}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{'Team' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <div class=\\\"team-img-wrap\\\">\\n                                       <img class=\\\"thumb-gap\\\" src=\\\"{{image}}\\\" width=\\\"30\\\" height=\\\"30\\\" *ngFor=\\\"let image of projectDetails.team_image\\\">\\n                                    </div>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{'Status' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5 class=\\\"success-text\\\">{{projectDetails.status}}</h5>\\n                                 </div>\\n                              </div>\\n                              <mat-divider></mat-divider>\\n                           </mat-list-item>\\n                           <mat-list-item role=\\\"listitem\\\">\\n                              <div class=\\\"project-details-listing full-wid\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                                 <div class=\\\"listing-title\\\">\\n                                    <h5 class=\\\"font-normal\\\">{{'Deadline' | translate }} : </h5>\\n                                 </div>\\n                                 <div class=\\\"listing-detail\\\">\\n                                    <h5>{{projectDetails.deadline}}</h5>\\n                                 </div>\\n                              </div>\\n                           </mat-list-item>\\n                        </mat-list>  \\n                     </mat-card>\\n                  </div>\\n                  <div fxLayout=\\\"column\\\">\\n                     <mat-card>                               \\n                        <div class=\\\"progress-bar mrgn-b-md\\\">\\n                           <h5 class=\\\"mrgn-b-none\\\">{{'Progress' | translate }} : <span class=\\\"primary-text\\\">{{projectDetails.progress_value}}%</span></h5>\\n                           <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{projectDetails.progress_value}}\\\"></mat-progress-bar>\\n                        </div>\\n                     </mat-card>\\n                  </div>\\n                  <div fxLayout=\\\"column\\\">\\n                     <mat-card>                               \\n                        <div class=\\\"project-slider-wrap\\\">\\n                           <h5 class=\\\"mrgn-b-md\\\">{{'Project Gallery' | translate }}</h5>\\n                           <div class=\\\"project-slider\\\">\\n                              <ngx-slick-carousel [config]=\\\"projectGallaryConfig\\\">\\n                                 <img src=\\\"{{images}}\\\" ngxSlickItem width=\\\"\\\" height=\\\"\\\" alt=\\\"\\\" *ngFor=\\\"let images of projectDetails.project_gallery\\\">\\n                              </ngx-slick-carousel>\\n                           </div>\\n                        </div>\\n                     </mat-card>\\n                  </div>\\n               </div>\\n            </div>\\n         </div>\\n      </div>\\n   </div>\\n</ng-container>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NybS9wcm9qZWN0LWRldGFpbC9wcm9qZWN0LWRldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from '../../service/core/core.service';\nimport { Router,ActivatedRoute, Params } from '@angular/router';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\nimport { TranslateService } from '@ngx-translate/core'\n\n@Component({\n  selector: 'ms-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.scss']\n})\n\nexport class ProjectDetailComponent implements OnInit {\n\n\tprojectDetails : any;\n   Id             : any;\n\tprojectGallaryConfig  = {\"slidesToShow\": 1,\"fade\": true, \"slidesToScroll\": 1,\"arrows\": false,\"dots\": false,\"autoplay\": true, \"autoplaySpeed\": 2000};\n\n\tconstructor(private coreService : CoreService,\n\t\t\t\t\tprivate route: ActivatedRoute,\n               private router: Router,\n               private pageTitleService: PageTitleService,\n               private translate : TranslateService) { }\n\n\tngOnInit() {\n      this.pageTitleService.setTitle(\"Project Detail\");\n\t\tthis.projectDetails = this.coreService.projectDetailsContent;\n\t\tthis.route.params.subscribe(res => {\n\t\t\tthis.Id = res.id;\n\t\t\tthis.getProjectDetails();\n      });\n   }\n\n   //getProjectDetails method is used to get the project details.\n   public getProjectDetails() {\n      this.Id = (this.Id) ? this.Id : 1;\n      this.coreService.getProjectContent().\n        subscribe(res => {this.getProjectDetailsResponse(res)});\n   }\n\n   //getProjectDetailsResponse method is used to get the response of project and then show the project details.\n   public getProjectDetailsResponse(response) {\n      for(let data of response)\n      {\n         if(data.id == this.Id) {\n            this.projectDetails = data;\n            break;\n         }\n      }\n   }\n}\n","module.exports = \"<mat-card class=\\\"pad-y-lg mrgn-b-lg\\\">\\r\\n   <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"30\\\" fxFlex.lg=\\\"30\\\" fxFlex.xl=\\\"30\\\">\\r\\n         <div class=\\\"pad-r-md\\\">\\r\\n            <h2>{{'Search' | translate}}</h2>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"70\\\" fxFlex.lg=\\\"70\\\" fxFlex.xl=\\\"70\\\">\\r\\n         <div fxLayout=\\\"row wrap\\\">\\r\\n            <div class=\\\"form-group pad-r-md\\\" fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"calc(100% - 200px)\\\" fxFlex.lg=\\\"calc(100% - 200px)\\\" fxFlex.xl=\\\"calc(100% - 200px)\\\">\\r\\n               <mat-form-field class=\\\"full-wid\\\" floatLabel=\\\"never\\\">\\r\\n                  <input matInput placeholder=\\\"Search Projects\\\">\\r\\n               </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"contact-btn\\\" fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"200px\\\" fxFlex.lg=\\\"200px\\\" fxFlex.xl=\\\"200px\\\"> \\r\\n               <button class=\\\"mrgn-r-sm mrgn-b-sm\\\" mat-raised-button color=\\\"primary\\\">Search</button>\\r\\n               <button mat-raised-button color=\\\"primary\\\">Add<mat-icon class=\\\"mrgn-l-sm\\\">add</mat-icon></button>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\t\\t\\t\\r\\n</mat-card>\\t\\r\\n<div class=\\\"mrgn-all-md\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n   <div class=\\\"title\\\">\\r\\n      <h2 class=\\\"mrgn-b-none\\\">{{'Project' | translate }} {{showType | translate}}</h2>\\r\\n   </div>\\r\\n   <div class=\\\"project-icon\\\">\\r\\n      <button id=\\\"grid\\\" class=\\\"active\\\" mat-icon-button (click)=\\\"projectShowType('grid')\\\">\\r\\n         <mat-icon>apps</mat-icon>\\r\\n      </button>\\r\\n      <button id=\\\"list\\\" mat-icon-button (click)=\\\"projectShowType('list')\\\">\\r\\n         <mat-icon>list</mat-icon>\\r\\n      </button>\\r\\n   </div>\\r\\n</div>\\r\\n<ng-container *ngIf=\\\"showType == 'list';else gridtype\\\">\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n         <div class=\\\"project-list table-list-wrap\\\">\\r\\n            <mat-card class=\\\"pad-t-none\\\">\\r\\n               <!-- <div class=\\\"table-title\\\">\\r\\n                  <h4 class=\\\"mrgn-b-none\\\">Project List</h4>\\r\\n               </div>  -->\\r\\n               <mat-divider></mat-divider>       \\r\\n               <div class=\\\"table-responsive gene-card-content project-list-table\\\">  \\r\\n                  <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"liveTradeSource\\\">\\r\\n                     <ng-container matColumnDef=\\\"id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Id</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Project Name</th>\\r\\n                        <td class=\\\"text-nowrap project-name\\\" mat-cell *matCellDef=\\\"let element\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"projectDetails(element)\\\">{{element.name}}</a></td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"budget\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>budget</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.budget}}</td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"duration\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Duration</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.duration}}</td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"client\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Client</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.client}}</td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"team_image\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Team</th>\\r\\n                        <td class=\\\"text-nowrap team-images-wrap pad-x-md\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                           <ng-container *ngFor=\\\"let image of element.team_image\\\">\\r\\n                              <img class=\\\"img-circle inline-block\\\" src=\\\"{{image}}\\\" width=\\\"30\\\" height=\\\"30\\\">\\r\\n                           </ng-container>\\r\\n                        </td>\\r\\n                     </ng-container>      \\r\\n                     <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                           <mat-chip-list>\\r\\n                              <mat-chip color=\\\"{{element.statusColor}}\\\" selected>{{element.status}}</mat-chip>\\r\\n                           </mat-chip-list>\\r\\n                        </td>\\r\\n                     </ng-container>\\r\\n                     <ng-container matColumnDef=\\\"deadline\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Deadline</th>\\r\\n                        <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.deadline}}</td>\\r\\n                     </ng-container>\\r\\n                     <tr mat-header-row *matHeaderRowDef=\\\"displayedProjectIdColumns\\\"></tr>\\r\\n                     <tr mat-row *matRowDef=\\\"let row; columns: displayedProjectIdColumns\\\"></tr>\\r\\n                  </table>\\r\\n               </div>   \\r\\n               <mat-paginator [pageSizeOptions]=\\\"[10, 15, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </mat-card>\\r\\n         </div>\\r\\n      </div> \\r\\n   </div>\\r\\n</ng-container>\\r\\n<ng-template #gridtype>\\r\\n   <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start stretch\\\">\\r\\n   \\t<div fxFlex.gt-md=\\\"33.33\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\" *ngFor=\\\"let content of projectContent\\\">\\r\\n   \\t\\t<mat-card>\\r\\n   \\t\\t\\t<div class=\\\"gene-card-title\\\">\\r\\n   \\t\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n   \\t\\t\\t\\t\\t<div fxLayout=\\\"column\\\">\\r\\n   \\t\\t\\t\\t\\t\\t<h4 class=\\\"mrgn-b-none\\\"><a href=\\\"javascript:void(0);\\\" (click)=\\\"projectDetails(content)\\\">{{content.name | translate}}</a></h4>\\r\\n   \\t\\t\\t\\t\\t</div> <span fxFlex></span>\\r\\n   \\t\\t\\t\\t\\t<button mat-icon-button>\\r\\n                      <mat-icon>sync</mat-icon>\\r\\n                   </button>\\r\\n   \\t\\t\\t\\t\\t<button mat-icon-button [matMenuTriggerFor]=\\\"options\\\">\\r\\n                     <mat-icon>more_horiz</mat-icon>\\r\\n                  </button>\\r\\n   \\t\\t\\t\\t</div>\\r\\n   \\t\\t\\t\\t<mat-divider></mat-divider>\\r\\n   \\t\\t\\t</div>\\r\\n   \\t\\t\\t<div class=\\\"gene-card-content\\\">\\r\\n   \\t\\t\\t\\t<div class=\\\"desc-wrap\\\">\\r\\n                  <h5>{{'Description' | translate}} : </h5>\\r\\n                  <p>{{content.short_description}}<p>\\r\\n               </div>\\r\\n               <div class=\\\"project-team mrgn-b-md\\\">\\r\\n                  <h5>{{'Team Members' | translate}} : </h5>\\r\\n                  <div class=\\\"team-img-wrap\\\">\\r\\n                     <img class=\\\"thumb-gap\\\" src=\\\"{{image}}\\\" width=\\\"30\\\" height=\\\"30\\\" *ngFor=\\\"let image of content.team_image\\\">\\r\\n                  </div>\\r\\n               </div>\\r\\n               <div class=\\\"deadline-info mrgn-b-md\\\">\\r\\n                  <h5>{{'Deadline' | translate}} : </h5>\\r\\n                  <p>{{content.deadline}}</p>\\r\\n               </div>\\r\\n               <div class=\\\"progress-bar mrgn-b-md\\\">\\r\\n                  <h5 class=\\\"mrgn-b-none\\\">{{'Progress' | translate}} : <span class=\\\"primary-text\\\">{{content.progress_value}}%</span></h5>\\r\\n                  <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{content.progress_value}}\\\"></mat-progress-bar>\\r\\n               </div>\\r\\n               <div class=\\\"button-wrap text-right\\\">               \\r\\n                  <a href=\\\"javascript:void(0)\\\" (click)=\\\"projectDetails(content)\\\" class=\\\"primary-text\\\">{{'Learn More' | translate}}</a>\\r\\n               </div>\\r\\n   \\t\\t\\t</div>\\r\\n   \\t\\t</mat-card>\\r\\n   \\t</div>\\r\\n   </div>\\r\\n</ng-template>\\r\\n\\r\\n<mat-menu #options=\\\"matMenu\\\" x-position=\\\"before\\\">\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>settings</mat-icon> Settings </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>more</mat-icon> View More </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>notifications_off</mat-icon> Disable notifications </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>exit_to_app</mat-icon> Remove Panel </button>\\r\\n</mat-menu>\\r\\n \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NybS9wcm9qZWN0cy9wcm9qZWN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { CoreService } from '../../service/core/core.service';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\nimport { TranslateService } from '@ngx-translate/core'\n\n@Component({\n\tselector: 'ms-projects',\n\ttemplateUrl: './projects.component.html',\n\tstyleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n\tshowType : string = 'grid';\n\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\n\tprojectContent : any;\n\n\tliveTradeSource;\n\n\tdisplayedProjectIdColumns : string [] = ['id', 'name','budget', 'duration', 'client', 'team_image','status', 'deadline'];\n\n\tconstructor(private router : Router,\n\t\t\t\t\tprivate coreService : CoreService,\n\t\t\t\t\tprivate pageTitleService: PageTitleService,\n\t\t\t\t\tprivate translate : TranslateService) { }\n\n\tngOnInit() {\n\t\tthis.pageTitleService.setTitle(\"Projects\");\n\t\tthis.showProjectData();\n\t}\n\n\t/**\n\t  * projectShowType method is used to select the show type of project.\n\t  */\n\tprojectShowType(type) {\n\t\tthis.showType = type;\n\t\tif(type=='list'){\n\t\t\tdocument.getElementById('list').classList.add(\"active\");\n\t\t\tdocument.getElementById('grid').classList.remove('active');\n\t\t\tthis.showProjectData();\n\t\t}\n\t\telse{\n\t\t\tdocument.getElementById('grid').classList.add(\"active\");\n\t\t\tdocument.getElementById('list').classList.remove('active');\n\t\t}\n\t}\n\n\t/**\n\t  * projectDetails method is used to show the project details.\n\t  */\n\tprojectDetails(content){\n\t\tthis.router.navigate(['/crm/project-detail',content.id]);\n\t\tthis.coreService.projectDetailsContent = content;\n\t}\n\n\t/**\n\t  * showProjectData method is used to get the project data and set the pagination in project list.\n\t  */\n\tshowProjectData(){\n\t\tthis.coreService.getProjectContent().\n\t\t\tsubscribe(  res => {this.projectContent = res},\n\t\t\t\t\t\t\terr =>console.log(err),\n\t\t\t\t\t\t\t() =>  this.liveTradeSource = new MatTableDataSource<any>(this.projectContent)\n\t\t\t);\n\n\t\tsetTimeout(()=>{\n\t\t\tif(this.paginator){\n\t\t\t\tthis.liveTradeSource.paginator = this.paginator;\n\t\t\t}\n\t\t},1000)\n\t}\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\">\\n   <div fxFlex.gt-md=\\\"50\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n      <div class=\\\"invoice-list table-list-wrap\\\">\\n         <mat-card class=\\\"pad-t-none\\\">\\n            <div class=\\\"table-title gene-card-title\\\">\\n               <h4 class=\\\"mrgn-b-none\\\">{{'Invoices' | translate}}</h4>\\n            </div> \\n            <mat-divider></mat-divider>       \\n            <div class=\\\"table-responsive gene-card-content\\\">  \\n               <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"invoicelist\\\">\\n                  <ng-container matColumnDef=\\\"id\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Invoice Id</th>\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>{{element.id}}</div>\\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"clientName\\\">\\n                     <th mat-header-cell *matHeaderCellDef>Client Name</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>   \\n                           <h6 class=\\\"mrgn-b-none\\\">{{element.firstName}} {{element.lastName}}</h6>\\n                        </div>   \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"accountType\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Account Type</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-chip-list>\\n                           <mat-chip color=\\\"{{element.accountTypeColor}}\\\" selected>{{element.accountType}}</mat-chip>\\n                        </mat-chip-list> \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"dateCreated\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date Created</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.dateCreated | date:'mediumDate'}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"dueDate\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Due Date</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.dueDate | date:'mediumDate'}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"amount\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                  </ng-container>\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedInvoiceColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedInvoiceColumns\\\"></tr>\\n               </table>\\n            </div>   \\n         </mat-card>\\n      </div>\\n   </div>  \\n   <div fxFlex.gt-md=\\\"50\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n      <div class=\\\"payment-list table-list-wrap\\\">\\n         <mat-card class=\\\"pad-t-none\\\">\\n            <div class=\\\"table-title gene-card-title\\\">\\n               <h4 class=\\\"mrgn-b-none\\\">{{'Payments' | translate}}</h4>\\n            </div>\\n            <mat-divider></mat-divider> \\n            <div class=\\\"table-responsive gene-card-content\\\">  \\n               <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"paymentlist\\\">\\n                  <ng-container matColumnDef=\\\"payid\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Payment Id</th>\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>{{element.payid}}</div>\\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"clientName\\\">\\n                     <th mat-header-cell *matHeaderCellDef>Client Name</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>   \\n                           <h6 class=\\\"mrgn-b-none\\\">{{element.firstName}} {{element.lastName}}</h6>\\n                        </div>   \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"paymentType\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Payment Type</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-chip-list>\\n                           <mat-chip color=\\\"{{element.paymentTypeColor}}\\\" selected>{{element.paymentType}}</mat-chip>\\n                        </mat-chip-list> \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"paidDate\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Paid Date</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.paidDate | date:'mediumDate'}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"amount\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                  </ng-container>\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedPaymentColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedPaymentColumns\\\"></tr>\\n               </table>\\n            </div>   \\n         </mat-card>\\n      </div>\\n   </div>  \\n</div> \\n<div *ngIf=\\\"tableTabData\\\">\\n   <mat-card class=\\\"pad-all-md\\\">\\n      <mat-tab-group class=\\\"table-tab-list\\\" color=\\\"accent\\\">\\n         <mat-tab label=\\\"{{'Transaction List' | translate}}\\\">\\n            <div fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n               <div class=\\\"transactiion-list table-list-wrap\\\">\\n                  <div class=\\\"table-responsive\\\">  \\n                     <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"tableTabData.transactionList\\\">\\n                        <ng-container matColumnDef=\\\"transid\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Transaction Id</th>\\n                           <td mat-cell *matCellDef=\\\"let element\\\">\\n                              <div>{{element.transid}}</div>\\n                           </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"date\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.date | date:'mediumDate'}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"account\\\">\\n                           <th mat-header-cell *matHeaderCellDef>Account</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.account}}</td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"type\\\">\\n                           <th mat-header-cell *matHeaderCellDef>Type</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                              <mat-chip-list>\\n                                 <mat-chip color=\\\"{{element.typeColor}}\\\" selected>{{element.type}}</mat-chip>\\n                              </mat-chip-list>\\n                           </td>   \\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"amount\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"debit\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Debit</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.debit}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"credit\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Credit</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.credit}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"balance\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Balance</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.balance}} </td>\\n                        </ng-container>\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedTransactionColumns\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedTransactionColumns\\\"></tr>\\n                     </table>\\n                  </div>  \\n               </div>\\n            </div>\\n         </mat-tab>\\n         <mat-tab label=\\\"{{'Transfer Report' | translate}}\\\">\\n            <div fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n               <div class=\\\"invoice-list table-list-wrap\\\">\\n                  <div class=\\\"table-responsive\\\">  \\n                     <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"tableTabData.transferreport\\\">\\n                        <ng-container matColumnDef=\\\"transid\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Transfer Id</th>\\n                           <td mat-cell *matCellDef=\\\"let element\\\">\\n                              <div>{{element.transid}}</div>\\n                           </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"date\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.date | date:'mediumDate'}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"account\\\">\\n                           <th mat-header-cell *matHeaderCellDef>Account</th>\\n                           \\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.account}}</td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"type\\\">\\n                           <th mat-header-cell *matHeaderCellDef>Type</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                              <mat-chip-list>\\n                                 <mat-chip color=\\\"{{element.typeColor}}\\\" selected>{{element.type}}</mat-chip>\\n                              </mat-chip-list>\\n                           </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"amount\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"balance\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Balance</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.balance}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"status\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Status</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                              <mat-chip-list>\\n                                 <mat-chip color=\\\"{{element.statusColor}}\\\" selected>{{element.status}}</mat-chip>\\n                              </mat-chip-list> \\n                           </td>\\n                        </ng-container>\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedTransferColumns\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedTransferColumns\\\"></tr>\\n                     </table>\\n                  </div>   \\n               </div>\\n            </div> \\n         </mat-tab>\\n         <mat-tab label=\\\"{{'Expense Category' | translate}}\\\">\\n            <div fxFlex.gt-md=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n               <div class=\\\"Expense-category-list table-list-wrap\\\">\\n                  <div class=\\\"table-responsive\\\">  \\n                     <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"tableTabData.expenseCategory\\\">\\n                        <ng-container matColumnDef=\\\"itmNo\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Item No</th>\\n                           <td mat-cell *matCellDef=\\\"let element\\\">\\n                              <div>{{element.itmNo}}</div>\\n                           </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"date\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.date | date:'mediumDate'}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"type\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Type</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                              <mat-chip-list>\\n                                 <mat-chip color=\\\"{{element.typeColor}}\\\" selected>{{element.type}}</mat-chip>\\n                              </mat-chip-list> \\n                           </td>   \\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"description\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Description</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.description}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"amount\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"status\\\">\\n                           <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Status</th>\\n                           <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                              <mat-chip-list>\\n                                 <mat-chip color=\\\"{{element.statusColor}}\\\" selected>{{element.status}}</mat-chip>\\n                              </mat-chip-list> \\n                           </td>\\n                        </ng-container>\\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedExpenseColumns\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedExpenseColumns\\\"></tr>\\n                     </table>\\n                  </div>   \\n               </div>\\n            </div>   \\n         </mat-tab>\\n      </mat-tab-group>\\n   </mat-card>\\n</div> \\n<div fxLayout=\\\"row wrap\\\">\\n   <div fxFlex.gt-md=\\\"50\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n      <div class=\\\"tax-rate-list table-list-wrap\\\">\\n         <mat-card class=\\\"pad-t-none\\\">\\n            <div class=\\\"table-title gene-card-title\\\">\\n               <h4 class=\\\"mrgn-b-none\\\">{{'Tax Rates' | translate}}</h4>\\n            </div> \\n            <mat-divider></mat-divider>       \\n            <div class=\\\"table-responsive gene-card-content\\\">  \\n               <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"taxrates\\\">\\n                  <ng-container matColumnDef=\\\"date\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.date | date:'mediumDate'}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"type\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Type</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-chip-list>\\n                           <mat-chip color=\\\"{{element.TypeColor}}\\\" selected>{{element.type}}</mat-chip>\\n                        </mat-chip-list> \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"account\\\">\\n                     <th mat-header-cell *matHeaderCellDef>Account</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.account}}</td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"amount\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Amount</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.amount}} </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"credit\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Credit</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.credit}} </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"balance\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Balance</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.balance}} </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedTaxColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedTaxColumns\\\"></tr>\\n               </table>\\n            </div>   \\n         </mat-card>\\n      </div>\\n   </div>  \\n   <div fxFlex.gt-md=\\\"50\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\n      <div class=\\\"payment-list table-list-wrap\\\">\\n         <mat-card class=\\\"pad-t-none\\\">\\n            <div class=\\\"table-title gene-card-title\\\">\\n               <h4 class=\\\"mrgn-b-none\\\">{{'Add Tickets' | translate}}</h4>\\n            </div>\\n            <mat-divider></mat-divider> \\n            <div class=\\\"table-responsive gene-card-content\\\">  \\n               <table class=\\\"full-wid\\\" mat-table [dataSource]=\\\"addtickets\\\">\\n                  <ng-container matColumnDef=\\\"srno\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Sr.No</th>\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>{{element.srno}}</div>\\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"ticketCode\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Tickets Code</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <div>   \\n                           <h6 class=\\\"mrgn-b-none\\\">{{element.ticketCode}}</h6>\\n                        </div>   \\n                     </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"subject\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Subject</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.subject}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"date\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>date</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.date | date:'mediumDate'}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"department\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Department</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">{{element.department}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"status\\\">\\n                     <th class=\\\"text-nowrap\\\" mat-header-cell *matHeaderCellDef>Status</th>\\n                     <td class=\\\"text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\">\\n                        <mat-chip-list>\\n                           <mat-chip color=\\\"{{element.statusColor}}\\\" selected>{{element.status}}</mat-chip>\\n                        </mat-chip-list> \\n                     </td>\\n                  </ng-container>\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedAddTicketsColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedAddTicketsColumns\\\"></tr>\\n               </table>\\n            </div>   \\n         </mat-card>\\n      </div>\\n   </div>  \\n</div>   \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NybS9yZXBvcnRzL3JlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { CoreService } from '../../service/core/core.service';\nimport { PageTitleService } from '../../core/page-title/page-title.service';\nimport { TranslateService } from '@ngx-translate/core'\n\n@Component({\n  selector: 'ms-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n   \n   tableTabData : any;\n   //Invoices content\n\tinvoicelist : any [] = [\n      {\n         id:\"#inv001\",\n      \tfirstName :\"Steven\",\n         lastName :\"Gonz\",\n         accountTypeColor:\"primary\",\n         accountType:\"Paid\",\n         dateCreated:\"13 Aug 2017\",\n         dueDate:\"4 Jan 2018\",\n         amount:\"$1000\"\n      },\n      {\n         id:\"#inv002\",\n         firstName :\"Joseph\",\n         lastName :\"Good\",\n         accountType:\"partially paid\",\n         accountTypeColor:\"accent\",\n         dateCreated:\"22 Aug 2017\",\n         dueDate:\"28 Feb 2019\",\n         amount:\"$2500\"\n     \t},\n      {\n         id:\"#inv003\",\n         firstName :\"Mario\",\n         lastName :\"Harmon\",\n\t\t\taccountType:\"paid\",\n         accountTypeColor:\"primary\",\n         dateCreated:\"13 Aug 2017\",\n         dueDate:\"10 Mar 2018\",\n         amount:\"$500\"\n      },\n      {\n         id:\"#inv004\",\n         firstName :\"Aleta\",\n         lastName :\"Good\",\n\t\t\taccountType:\"unpaid\",\n         accountTypeColor:\"warn\",\n         dateCreated:\"22 Aug 2017\",\n         dueDate:\"23 Aug 2019\",\n         amount:\"$700\"\n      },\n      {\n         id:\"#inv005\", \n         firstName :\"Floren\",\n         lastName :\"Smith\",\n         accountType:\"partially paid\",\n         accountTypeColor:\"accent\",\n         dateCreated:\"13 Aug 2018\",\n         dueDate:\"25 June 2018\",\n         amount:\"$1090\"\n      },\n      {\n         id:\"#inv006\",\n         firstName :\"Helen\",\n         lastName :\"Moron\",\n         accountType:\"unpaid\",\n         accountTypeColor:\"warn\",\n         dateCreated:\"22 Aug 2017\",\n         dueDate:\"29 Nov 2018\",\n         amount:\"$1900\"\n      }\n   ];\n\n   //Payments content\n   paymentlist : any [] = [\n      {\n         payid:\"#pay001\",\n      \tfirstName :\"Leonard\",\n         lastName :\"Gonz\",\n         paymentType:\"Paypal\",\n         paymentTypeColor:\"primary\",\n         paidDate: \"19 Aug 2017\",\n         amount:\"$2000\"\n      },\n      {\n         payid:\"#pay002\",\n         firstName :\"Agnes\",\n         lastName :\"Good\",\n         paymentType:\"Paytm\",\n         paymentTypeColor:\"accent\",\n         paidDate: \"22 Mar 2017\",\n         amount:\"$500\"\n     \t},\n      {\n         payid:\"#pay003\",\n         firstName :\"Bonnie\",\n         lastName :\"Harmon\",\n         paymentType:\"Debit Card\",\n         paymentTypeColor:\"primary\",\n         paidDate: \"30 Sep 2017\",\n         amount:\"$1500\"\n      },\n      {\n         payid:\"#pay004\",\n         firstName :\"Virgil\",\n         lastName :\"Good\",\n         paymentType:\"Credit Card\",\n         paymentTypeColor:\"accent\",\n         paidDate: \"20 Aug 2017\",\n         amount:\"$1700\"\n      },\n      {\n         payid:\"#pay005\", \n         firstName :\"Kevin\",\n         lastName :\"Smith\",\n         paymentType:\"paypal\",\n         paymentTypeColor:\"primary\",\n         paidDate: \"13 Aug 2018\",\n         amount:\"$1290\"\n      },\n      {\n         payid:\"#pay006\",\n         firstName :\"Alice\",\n         lastName :\"Moron\",\n         paymentType:\"Phone pe\",\n         paymentTypeColor:\"warn\",\n         paidDate: \"22 Aug 2017\",\n         amount:\"$1500\"\n      }\n   ];\n\n   //Tax Rates content\n   taxrates : any [] = [\n      {\n         date:\"4 Jan 2018\",\n         account:\"The Bank of America\",\n         TypeColor:\"primary\",\n         type:\"Expense\",\n         amount:\"$1000.00\",\n         credit:\"$300.00\",\n         balance:\"$200.00\"\n      },\n      {\n         date:\"28 Feb 2019\",\n         account:\"Barclays Bank\",\n         TypeColor:\"accent\",\n         type:\"Income\",\n         amount:\"$2500.00\",\n         credit:\"$200.00\",\n         balance:\"$150.00\"\n     \t},\n      {\n         date:\"10 Mar 2018\",\n\t\t\taccount:\"Bank of Scotland\",\n         TypeColor:\"primary\",\n         type:\"Saving\",\n         amount:\"$500.00\",\n         credit:\"$100.00\",\n         balance:\"$50.00\"\n         \n      },\n      {\n         date:\"23 Aug 2019\",\n\t\t\taccount:\"Deutsche Bank\",\n         TypeColor:\"warn\",\n         type:\"Income\",\n         amount:\"$700.00\",\n         credit:\"$300.00\",\n         balance:\"$200.00\"\n      \n      },\n      {\n         date:\"25 June 2018\",\n         account:\"HSBC Bank\",\n         TypeColor:\"accent\",\n         type:\"Saving\",\n         amount:\"$1090.00\",\n         credit:\"$800.00\",\n         balance:\"$600.00\"\n         \n      },\n      {\n         date:\"29 Nov 2018\",\n         account:\"HSBC Bank\",\n         TypeColor:\"warn\",\n         type:\"Expense\",\n         amount:\"$1900.00\",\n         credit:\"$600.00\",\n         balance:\"$400.00\"\n        \n      }\n   ];\n\n   //Add Tickets content\n   addtickets : any [] = [\n      {\n         srno:\"01\",\n      \tticketCode:\"TRC 45651\",\n         subject:\"Fly Bimen\",\n         date: \"19 Aug 2017\",\n         department:\"First Class\",\n         status:\"Booked\",\n         statusColor:\"primary\"\n      },\n      {\n         srno:\"02\",\n         ticketCode:\"TRC 45652\",\n         subject:\"Fly Emeters\",\n         date: \"22 Mar 2017\",\n         department:\"Second Class\",\n         status:\"cancel\",\n         statusColor:\"warn\"\n     \t},\n      {\n         srno:\"03\",\n         ticketCode:\"TRC 45653\",\n         subject:\"Air India\",\n         date: \"30 Sep 2017\",\n         department:\"First Class\",\n         status:\"Booked\",\n         statusColor:\"primary\"\n      },\n      {\n         srno:\"04\",\n         ticketCode:\"TRC 45654\",\n         subject:\"Air India\",\n         date: \"20 Aug 2017\",\n         department:\"First Class\",\n         status:\"Booked\",\n         statusColor:\"primary\"\n      },\n      {\n         srno:\"05\",\n         ticketCode:\"TRC 45655\",\n         subject:\"Air India\",\n         date: \"13 Aug 2018\",\n         department:\"Second Class\",\n         status:\"cancel\",\n         statusColor:\"warn\"\n      },\n      {\n         srno:\"06\",\n         ticketCode:\"TRC 45656\",\n         subject:\"Air India\",\n         date: \"22 Aug 2017\",\n         department:\"First Class\",\n         status:\"booked\",\n         statusColor:\"primary\"\n      }\n   ];\n\n\n   displayedInvoiceColumns : string [] = ['id','clientName','accountType','dateCreated','dueDate', 'amount'];\n   \n   displayedPaymentColumns : string [] = ['payid','clientName', 'paymentType','paidDate', 'amount'];\n\n   displayedTransactionColumns : string [] = ['transid','date','account', 'type', 'amount','debit','credit', 'balance'];\n\n   displayedTransferColumns : string [] = ['transid','date','account', 'type', 'amount', 'balance','status'];\n\n   displayedExpenseColumns : string [] = ['itmNo','date', 'type','description','amount','status'];\n\n   displayedTaxColumns : string [] = ['date','account', 'type', 'amount', 'credit', 'balance'];\n\n   displayedAddTicketsColumns : string [] = ['srno','ticketCode', 'subject','date','department','status',];\n\n   constructor ( private pageTitleService : PageTitleService,\n                 private translate : TranslateService,\n                 private service : CoreService ) { }\n\n   ngOnInit () { \n      this.pageTitleService.setTitle(\"Reports\");\n\n      this.service.getTableTabContent().\n         subscribe( res => { this.tableTabData = res },\n                    err => console.log(err),\n                    ()  => this.tableTabData\n                  );\n   }\n\n}\n"],"sourceRoot":""}